{"version":3,"sources":["reportWebVitals.js","components/icons/Search.jsx","pages/Home/Home.jsx","components/CustomLink.jsx","pages/LoginPage/LoginPage.jsx","pages/RegistrationPage/RegistrationPage.jsx","components/Spinner/Spinner.jsx","pages/FilmCard/ErrorFilmCard.jsx","components/FilmCardButton/FilmCardButton.jsx","components/icons/Star.jsx","components/icons/Settings.jsx","components/icons/Hamburger.jsx","components/Navigation/Navigation.jsx","pages/FilmCard/FilmCard.jsx","store/actions/filmActions.js","store/actions/complexFilmActions.js","containers/FilmCardContainer.jsx","pages/Settings/config.js","pages/Settings/Settings.jsx","components/ListLink/ListLink.jsx","pages/Lists/Lists.jsx","components/icons/Bookmark.jsx","components/icons/TrashBin.jsx","components/ListItem/ListItem.jsx","containers/SeenList/SeenList.jsx","containers/History/History.jsx","containers/Blacklist/Blacklist.jsx","containers/Favorites/Favorites.jsx","containers/Router.jsx","App.jsx","store/reducers/filmReducer.js","store/reducers/index.js","store/middlewares/index.js","store/middlewares/filmMiddleware.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchSvg","version","x","y","viewBox","width","height","d","Search","props","Icon","component","Home","className","to","CustomLink","history","onClick","Tag","tag","rest","event","push","defaultProps","withRouter","LoginForm","name","initialValues","remember","onFinish","values","alert","console","log","level","Item","rules","required","message","placeholder","Password","type","noStyle","valuePropName","htmlType","Button","RegistrationPage","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Spinner","indicator","LoadingOutlined","spin","ErrorFilmCard","error","id","htmlFor","FilmCardButton","eventAction","children","Star","xmlns","fill","SettingsSvg","Settings","HamburgerSvg","Hamburger","Navigation","Group","defaultValue","checked","Radio","IMAGE_ENDPOINT","FilmCard","film","changeFilm","seenFilm","removeFilm","cardEndRef","useRef","handleScrollToBottom","useCallback","current","scrollIntoView","behavior","useEffect","handleChangeFontSize","length","ageFormatted","age","alt","src","preview","style","fontSize","rate","secondName","year","countries","join","genres","description","ref","LOAD_FILMS","LOAD_FILMS_STARTED","LOAD_FILMS_FAILURE","ADD_TO_HISTORY","ADD_TO_BLACKLIST","ADD_TO_ALREADY_SEEN","ADD_TO_FAVORITES","REMOVE_FROM_HISTORY","REMOVE_FROM_ALREADY_SEEN","REMOVE_FROM_BLACKLIST","REMOVE_FROM_FAVORITES","SET_SETTINGS","SELECT_FILM","CLEAR_LISTS","addToHistory","filmId","addToBlacklist","addToAlreadySeen","addToFavorites","removeFromHistory","removeFromAlreadySeen","removeFromBlacklist","removeFromFavorites","clearLists","saveList","listName","dispatch","getState","list","filmReducer","localStorage","setItem","JSON","stringify","setSettingsAndSave","settings","setSettings","addToListAndSave","removeFromListAndSave","favoriteIconPush","favorites","data","find","item","randomIndex","films","blacklist","alreadySeen","filters","types","ratings","years","typesFilter","ratingsFilter","yearsFilter","genresFilter","some","genre","includes","countriesFilter","country","filter","every","Math","random","selectFilm","fetchFilms","axios","get","response","catch","err","connect","bindActionCreators","handleChangeFilm","handleMoveFilmToBlacklist","handleMoveFilmToAlreadySeen","TYPES","label","RATINGS","5","10","YEARS","1980","2021","GENRES","COUNTRIES","Title","Typography","Text","React","useState","selectedTypes","setSelectedTypes","selectedRatings","setSelectedRatings","selectedYears","setSelectedYears","selectedGenres","setSelectedGenres","selectedCountries","setSelectedCountries","dark","darkMode","setDarkMode","document","body","classList","toggle","handleSelect","map","handleDeSelect","size","onChange","val","defaultChecked","mode","showArrow","onDeselect","options","range","marks","min","max","step","onSelect","maxTagCount","forEach","removeItem","ListLink","listLength","Bookmark","status","TrashBinSvg","TrashBin","ListItem","removeFromList","reverse","timestamp","Router","exact","path","RegistrationForm","FilmCardContainer","Lists","History","SeenList","Blacklist","Favorites","prepareList","getItem","parse","initStore","temporary","isLoading","store","action","update","$set","$merge","Date","now","deleteFilm","splice","indexOf","next","createBrowserHistory","composer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","thunk","middlewares","createStore","combineReducers","router","connectRouter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.46cd1799.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Icon from '@ant-design/icons';\r\n\r\nconst SearchSvg = () => (\r\n    <svg version=\"1.1\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 37.166 37.166\" width=\"1em\" height=\"1em\">\r\n        <path d=\"M35.829,32.045l-6.833-6.833c-0.513-0.513-1.167-0.788-1.836-0.853c2.06-2.567,3.298-5.819,3.298-9.359\r\n\tc0-8.271-6.729-15-15-15c-8.271,0-15,6.729-15,15c0,8.271,6.729,15,15,15c3.121,0,6.021-0.96,8.424-2.598\r\n\tc0.018,0.744,0.305,1.482,0.872,2.052l6.833,6.833c0.585,0.586,1.354,0.879,2.121,0.879s1.536-0.293,2.121-0.879\r\n\tC37.001,35.116,37.001,33.217,35.829,32.045z M15.458,25c-5.514,0-10-4.484-10-10c0-5.514,4.486-10,10-10c5.514,0,10,4.486,10,10\r\n\tC25.458,20.516,20.972,25,15.458,25z\"/>\r\n    </svg>\r\n);\r\n\r\nconst Search = props => <Icon component={ SearchSvg } { ...props } />;\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Search from '../../components/icons/Search';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div className=\"main-page\">\r\n      <h1 className=\"main-page__title theme\">gotfilm</h1>\r\n      <Link className=\"main-page__icon\" to=\"/film\">\r\n        <Search className=\"search-icon_home theme\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst CustomLink = ({ history, to, onClick, tag: Tag, ...rest }) => (\r\n    <Tag\r\n        { ...rest }\r\n        onClick={ (event) => {\r\n            onClick(event);\r\n            history.push(to)\r\n        } }\r\n    />\r\n);\r\n\r\nCustomLink.propTypes = {\r\n    to: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    onClick: PropTypes.func\r\n};\r\nCustomLink.defaultProps = {\r\n    onClick: () => { }\r\n};\r\nexport default withRouter(CustomLink);","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './LoginPage.scss'\r\nimport CustomLink from '../../components/CustomLink'\r\n\r\nconst LoginForm = (props) => {\r\n  const onFinish = (values) => {\r\n    alert('Логин, пароль, статус чекбокса выведены в консоль.')\r\n    console.log('Received values of form: ', values)\r\n  }\r\n\r\n  return (\r\n    <div className='formWrapper theme'>\r\n      <Form\r\n        name='login-form'\r\n        className='loginForm theme'\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Title className='loginForm__title' level={2}>\r\n          Вход\r\n        </Title>\r\n        <Form.Item\r\n          name='username'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Пожалуйста введите имя или ник!',\r\n            },\r\n          ]}\r\n        >\r\n          <label className='theme'>\r\n            Имя пользователя\r\n            <Input placeholder='Ваше имя' />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name='password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Пожалуйста введите пароль!',\r\n            },\r\n          ]}\r\n        >\r\n          <label className='theme'>\r\n            Пароль\r\n            <Input.Password type='password' placeholder='Ваш пароль' />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name='remember' noStyle valuePropName='checked'>\r\n            <Checkbox className='theme'>Запомнить меня</Checkbox>\r\n          </Form.Item>\r\n\r\n          <Link className='loginForm__forgot' to='/recovery_password'>\r\n            Забыли пароль?\r\n          </Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType='submit' className='loginForm__button'>\r\n            войти\r\n          </Button>\r\n          <div className='loginForm--switcher theme'>\r\n            или{' '}\r\n            <Link className='loginForm__linkToRegistration' to='/registration'>\r\n              зарегистрировать аккаунт\r\n            </Link>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n      <CustomLink\r\n        className='linkToSettings loginForm__button'\r\n        to='/settings'\r\n        tag={Button}\r\n      >\r\n        Назад к настройкам\r\n      </CustomLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import { Form, Input, Button, Checkbox } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomLink from \"../../components/CustomLink\";\r\n\r\nimport \"./RegistrationPage.scss\";\r\n\r\nconst RegistrationPage = (props) => {\r\n  const onFinish = (values) => {\r\n    alert(\r\n      \"Юзернейм, email, пароль, подтверждение пароля, статус чекбокса выведены в консоль.\"\r\n    );\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"formWrapper theme\">\r\n      <Form\r\n        name=\"registration-form\"\r\n        className=\"regForm theme\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Title className=\"regForm__title\" level={2}>\r\n          Регистрация\r\n        </Title>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите имя или ник!\",\r\n            },\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            Имя пользователя\r\n            <Input placeholder=\"Ваше имя\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              required: true,\r\n              message: \"Введённый почтвой адрес не корректен\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите свою почту\",\r\n            },\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            E-mail\r\n            <Input placeholder=\"Ваша почта\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите пароль!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <label className=\"theme\">\r\n            Пароль\r\n            <Input.Password placeholder=\"Ваш пароль\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста подтвердите введённый пароль!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"Введённые пароли несовпадают!\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            Подтверждение пароля\r\n            <Input.Password placeholder=\"Подтвердите свой пароль\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value\r\n                  ? Promise.resolve()\r\n                  : Promise.reject(\r\n                      new Error(\"Для регистрации примите соглашение\")\r\n                    ),\r\n            },\r\n          ]}\r\n        >\r\n          <Checkbox className=\"theme\">\r\n            Я прочитал(а){\" \"}\r\n            <Link className=\"regForm__agreement\" to=\"/agreement\">\r\n              соглашение\r\n            </Link>\r\n          </Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" className=\"regForm__button\">\r\n            Зарегистрироваться\r\n          </Button>\r\n        </Form.Item>\r\n\r\n        <div className=\"regForm--switcher theme\">\r\n          или{\" \"}\r\n          <Link className=\"regForm__linkToLogin\" to=\"/login\">\r\n            уже есть аккаунт\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n      <CustomLink\r\n        className='linkToSettings loginForm__button'\r\n        to='/settings'\r\n        tag={Button}\r\n      >\r\n        Назад к настройкам\r\n      </CustomLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = (props) => {\r\n    return <Spin className=\"loadingSpinner\" indicator={<LoadingOutlined spin />} />\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './FilmCard.scss';\r\n\r\nconst ErrorFilmCard = ({ error }) => {\r\n    return (\r\n        <div className=\"filmCard--wrapper\">\r\n            <div className=\"filmCard__poster\"></div>\r\n            <div className=\"filmCard__infoBlock\">\r\n                <div className=\"filmCard__infoBlock--titleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__rate\">\r\n                    </p>\r\n                </div>\r\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__secondTitle\"></p>\r\n                    <p className=\"filmCard__infoBlock__year\"></p>\r\n                </div>\r\n                <p className=\"filmCard__infoBlock__error\"><span>{error}</span></p>\r\n                <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\r\n                <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\r\n                    <p className=\"filmCard__infoBlock__description\"></p>\r\n                </label>\r\n            </div>\r\n            <div className=\"filmCard__footer\">\r\n                <div className=\"filmCard__footer__buttonGroup\">\r\n                </div>\r\n                <div className=\"filmCard__footer__emptyBlock\" ></div>\r\n            </div>\r\n            <div className=\"navigation\"></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nErrorFilmCard.propTypes = {\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default ErrorFilmCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\n\r\nimport './FilmCardButton.scss';\r\n\r\nconst FilmCardButton = (props) => {\r\n    return (\r\n        <Button onClick={props.eventAction} className=\"button\">{props.children}</Button>\r\n    )\r\n};\r\n\r\nFilmCardButton.propTypes = {\r\n    eventAction: PropTypes.func,\r\n    children: PropTypes.string\r\n}\r\n\r\nexport default FilmCardButton;","import React from 'react';\r\n\r\nconst Star = (props) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 676 400\" fill=\"#DA952D\"><path d=\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default Star;","import Icon from '@ant-design/icons';\r\n\r\nconst SettingsSvg = () => (\r\n    <svg viewBox=\"0 0 48 48\" width=\"35px\" height=\"35px\"><path d=\"M39.139,26.282C38.426,25.759,38,24.919,38,24.034s0.426-1.725,1.138-2.247l3.294-2.415\tc0.525-0.386,0.742-1.065,0.537-1.684c-0.848-2.548-2.189-4.872-3.987-6.909c-0.433-0.488-1.131-0.642-1.728-0.38l-3.709,1.631\tc-0.808,0.356-1.749,0.305-2.516-0.138c-0.766-0.442-1.28-1.23-1.377-2.109l-0.446-4.072c-0.071-0.648-0.553-1.176-1.191-1.307\tc-2.597-0.531-5.326-0.54-7.969-0.01c-0.642,0.129-1.125,0.657-1.196,1.308l-0.442,4.046c-0.097,0.88-0.611,1.668-1.379,2.11\tc-0.766,0.442-1.704,0.495-2.515,0.138l-3.729-1.64c-0.592-0.262-1.292-0.11-1.725,0.377c-1.804,2.029-3.151,4.35-4.008,6.896\tc-0.208,0.618,0.008,1.301,0.535,1.688l3.273,2.4C9.574,22.241,10,23.081,10,23.966s-0.426,1.725-1.138,2.247l-3.294,2.415\tc-0.525,0.386-0.742,1.065-0.537,1.684c0.848,2.548,2.189,4.872,3.987,6.909c0.433,0.489,1.133,0.644,1.728,0.38l3.709-1.631\tc0.808-0.356,1.748-0.305,2.516,0.138c0.766,0.442,1.28,1.23,1.377,2.109l0.446,4.072c0.071,0.648,0.553,1.176,1.191,1.307\tC21.299,43.864,22.649,44,24,44c1.318,0,2.648-0.133,3.953-0.395c0.642-0.129,1.125-0.657,1.196-1.308l0.443-4.046\tc0.097-0.88,0.611-1.668,1.379-2.11c0.766-0.441,1.705-0.493,2.515-0.138l3.729,1.64c0.594,0.263,1.292,0.111,1.725-0.377\tc1.804-2.029,3.151-4.35,4.008-6.896c0.208-0.618-0.008-1.301-0.535-1.688L39.139,26.282z M24,31c-3.866,0-7-3.134-7-7s3.134-7,7-7\ts7,3.134,7,7S27.866,31,24,31z\" /></svg>\r\n);\r\n\r\nconst Settings = props => <Icon component={ SettingsSvg } { ...props } />;\r\n\r\nexport default Settings;","import Icon from '@ant-design/icons';\r\n\r\nconst HamburgerSvg = () => (\r\n    <svg viewBox=\"0 0 100 80\" width=\"32\" height=\"32\">\r\n        <rect width=\"100\" height=\"20\"></rect>\r\n        <rect y=\"30\" width=\"100\" height=\"20\"></rect>\r\n        <rect y=\"60\" width=\"100\" height=\"20\"></rect>\r\n    </svg>\r\n);\r\n\r\nconst Hamburger = props => <Icon component={ HamburgerSvg } { ...props } />;\r\n\r\nexport default Hamburger;","import React from \"react\";\r\nimport Search from '../icons/Search';\r\nimport Settings from '../icons/Settings';\r\nimport Hamburger from '../icons/Hamburger';\r\nimport CustomLink from '../CustomLink';\r\n\r\nimport { Radio } from 'antd';\r\n\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <Radio.Group className=\"navigation__container\" defaultValue={ props.checked } >\r\n\r\n            <CustomLink to='/lists'\r\n                        value=\"lists\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Hamburger />\r\n            </CustomLink>\r\n\r\n            <span className=\"divition-line\"></span>\r\n\r\n            <CustomLink to='/film'\r\n                        value=\"search\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Search className=\"search-icon_small\" />\r\n            </CustomLink>\r\n\r\n            <span className=\"divition-line\"></span>\r\n\r\n            <CustomLink to='/settings'\r\n                        value=\"settings\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Settings />\r\n            </CustomLink>\r\n\r\n        </Radio.Group>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Image } from 'antd';\r\nimport Spinner from '../../components/Spinner';\r\nimport ErrorFilmCard from './ErrorFilmCard';\r\nimport FilmCardButton from '../../components/FilmCardButton/FilmCardButton';\r\nimport Star from '../../components/icons/Star';\r\nimport './FilmCard.scss';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\n\r\nconst IMAGE_ENDPOINT = 'https://st.kp.yandex.net/images';\r\n\r\nconst FilmCard = ({ film, changeFilm, seenFilm, removeFilm, error }) => {\r\n    const cardEndRef = useRef(null);\r\n    \r\n    const handleScrollToBottom = useCallback(() => {\r\n        cardEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleScrollToBottom();\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleScrollToBottom();\r\n    }, [film, handleScrollToBottom]);\r\n\r\n    const handleChangeFontSize = useCallback(() => {\r\n        if (film.name.length > 15 && film.name.length < 30) {\r\n            return '20px';\r\n        } else if (film.name.length >= 30) {\r\n            return '18px';\r\n        } else {\r\n            return '25px';\r\n        }\r\n    }, [film]);\r\n\r\n    const ageFormatted = film.age !== null && `, ${film.age}+`;\r\n\r\n    return (\r\n        error ? <ErrorFilmCard error={error}/> :\r\n        <div className=\"filmCard--wrapper theme\">\r\n            <div className=\"filmCard__poster\">\r\n                <img className=\"filmCard__poster__background\" alt=\"\"\r\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\r\n                />\r\n                <Image className=\"filmCard__poster__image\" alt={ film.name }\r\n                    preview={ { src: `${IMAGE_ENDPOINT}/film_big/${film.id}.jpg` } }\r\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\r\n                    placeholder={ <Spinner /> }\r\n                />\r\n            </div>\r\n            <div className=\"filmCard__infoBlock theme\">\r\n                <div className=\"filmCard__infoBlock--titleWrapper\">\r\n                    <h3 className=\"filmCard__infoBlock__title\" style={ { fontSize: handleChangeFontSize() } }>{ film.name }</h3>\r\n                    <p className=\"filmCard__infoBlock__rate\">\r\n                        <Star />\r\n                        { film.rate }\r\n                    </p>\r\n                </div>\r\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__secondTitle\">{ film.secondName }</p>\r\n                    <p className=\"filmCard__infoBlock__year\">{ film.year }г. ({ film.countries.join(', ') })</p>\r\n                </div>\r\n                <p className=\"filmCard__infoBlock__genre\">{ film.genres.join(', ') }<span>{ ageFormatted }</span></p>\r\n                <hr className=\"filmCard__infoBlock--underline\" />\r\n                <div className=\"filmCard__infoBlock--scrollableWrapper\">\r\n                    <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\r\n                    <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\r\n                        <p className=\"filmCard__infoBlock__description\">{ film.description }</p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"filmCard__footer theme\">\r\n                <div className=\"filmCard__footer__buttonGroup\">\r\n                    <FilmCardButton eventAction={ seenFilm }>уже смотрел</FilmCardButton>\r\n                    <FilmCardButton eventAction={ removeFilm }>не предлагать</FilmCardButton>\r\n                    <FilmCardButton eventAction={ changeFilm }>в другой раз</FilmCardButton>\r\n                </div>\r\n                <div className=\"filmCard__footer__emptyBlock\" ref={ cardEndRef }></div>\r\n            </div>\r\n            <Navigation checked={ 'search' } />\r\n        </div>\r\n    )\r\n};\r\n\r\nFilmCard.propTypes = {\r\n    error: PropTypes.string,\r\n    film: PropTypes.object,\r\n    removeFilm: PropTypes.func,\r\n    seenFilm: PropTypes.func,\r\n    changeFilm: PropTypes.func\r\n};\r\n\r\nexport default FilmCard;","export const LOAD_FILMS = '@@film/LOAD_FILMS';\r\nexport const LOAD_FILMS_STARTED = '@@film/LOAD_FILMS_STARTED';\r\nexport const LOAD_FILMS_FAILURE = '@@film/LOAD_FILMS_FAILURE';\r\nexport const ADD_TO_HISTORY = '@@film/ADD_TO_HISTORY';\r\nexport const ADD_TO_BLACKLIST = '@@film/ADD_TO_BLACKLIST';\r\nexport const ADD_TO_ALREADY_SEEN = '@@film/ADD_TO_ALREADY_SEEN';\r\nexport const ADD_TO_FAVORITES = '@@film/ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_HISTORY = '@@film/REMOVE_FROM_HISTORY';\r\nexport const REMOVE_FROM_ALREADY_SEEN = '@@film/REMOVE_FROM_ALREADY_SEEN';\r\nexport const REMOVE_FROM_BLACKLIST = '@@film/REMOVE_FROM_BLACKLIST';\r\nexport const REMOVE_FROM_FAVORITES = '@@film/REMOVE_FROM_FAVORITES';\r\nexport const SET_SETTINGS = '@@settings/SET_SETTINGS';\r\nexport const SELECT_FILM = '@@film/SELECT_FILM';\r\nexport const CLEAR_LISTS = '@@film/CLEAR_LISTS';\r\n\r\nexport const loadFilms = (films) => ({\r\n    type: LOAD_FILMS,\r\n    films\r\n});\r\n\r\nexport const loadFilmsStarted = () => ({\r\n    type: LOAD_FILMS_STARTED\r\n});\r\n\r\nexport const loadFilmsFailure = (error) => ({\r\n    type: LOAD_FILMS_FAILURE,\r\n    error\r\n});\r\n\r\nexport const selectFilm = (film) => ({\r\n    type: SELECT_FILM,\r\n    film\r\n});\r\n\r\nexport const addToHistory = (filmId) => ({\r\n    type: ADD_TO_HISTORY,\r\n    filmId\r\n});\r\n\r\nexport const addToBlacklist = (filmId) => ({\r\n    type: ADD_TO_BLACKLIST,\r\n    filmId\r\n});\r\n\r\nexport const addToAlreadySeen = (filmId) => ({\r\n    type: ADD_TO_ALREADY_SEEN,\r\n    filmId\r\n});\r\n\r\nexport const addToFavorites = (filmId) => ({\r\n    type: ADD_TO_FAVORITES,\r\n    filmId\r\n});\r\n\r\nexport const removeFromHistory = (filmId) => ({\r\n    type: REMOVE_FROM_HISTORY,\r\n    filmId\r\n});\r\n\r\nexport const removeFromAlreadySeen = (filmId) => ({\r\n    type: REMOVE_FROM_ALREADY_SEEN,\r\n    filmId\r\n});\r\n\r\nexport const removeFromBlacklist = (filmId) => ({\r\n    type: REMOVE_FROM_BLACKLIST,\r\n    filmId\r\n});\r\n\r\nexport const removeFromFavorites = (filmId) => ({\r\n    type: REMOVE_FROM_FAVORITES,\r\n    filmId\r\n});\r\n\r\nexport const clearLists = () => ({\r\n    type: CLEAR_LISTS\r\n});\r\n\r\nexport const setSettings = (settings) => ({\r\n    type: SET_SETTINGS,\r\n    settings\r\n});","import axios from 'axios';\r\nimport { loadFilms, loadFilmsStarted, loadFilmsFailure } from './filmActions';\r\nimport { selectFilm, addToHistory, addToBlacklist, addToAlreadySeen, addToFavorites, removeFromAlreadySeen, removeFromBlacklist, removeFromFavorites, removeFromHistory } from './filmActions';\r\nimport { setSettings } from './filmActions';\r\n\r\n/**\r\n * Сохраняет список в local storage\r\n * \r\n * @param {string} listName - имя списка для сохранения.\r\n */\r\nexport const saveList = (listName) => {\r\n    return (dispatch, getState) => {\r\n        const { [listName]: list } = getState().filmReducer;\r\n        localStorage.setItem(listName, JSON.stringify(list));\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Заменяет текущие настройки и сохраняет их в localStorage\r\n * \r\n * @param {object} settings - новый объект настроек.\r\n */\r\n export const setSettingsAndSave = (settings) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setSettings(settings));\r\n        dispatch(saveList('settings'));\r\n    }\r\n};\r\n\r\n/**\r\n * Добавляет фильм в список, затем сохраняет список в local storage\r\n * \r\n * @param {number} filmId - id добавляемого фильма.\r\n * @param {string} [listName=\"history\"] - имя списка для добавляемого фильма и сохранения.\r\n */\r\nexport const addToListAndSave = (filmId, listName = \"history\") => {\r\n    return (dispatch, getState) => {\r\n        switch (listName) {\r\n            case \"blacklist\":\r\n                dispatch(addToBlacklist(filmId));\r\n                break;\r\n            case \"alreadySeen\":\r\n                dispatch(addToAlreadySeen(filmId));\r\n                break;\r\n            case \"favorites\":\r\n                dispatch(addToFavorites(filmId));\r\n                break;\r\n            default:\r\n                dispatch(addToHistory(filmId));\r\n        }\r\n        dispatch(saveList(listName));\r\n    }\r\n};\r\n\r\n/**\r\n * Удаляет фильм из списка, затем сохраняет список в local storage\r\n * \r\n * @param {number} filmId - id удаляемого фильма.\r\n * @param {string} [listName=\"history\"] - имя списка для удаляемого фильма и сохранения.\r\n */\r\nexport const removeFromListAndSave = (filmId, listName = \"history\") => {\r\n    return (dispatch, getState) => {\r\n        switch (listName) {\r\n            case \"blacklist\":\r\n                dispatch(removeFromBlacklist(filmId));\r\n                break;\r\n            case \"alreadySeen\":\r\n                dispatch(removeFromAlreadySeen(filmId));\r\n                break;\r\n            case \"favorites\":\r\n                dispatch(removeFromFavorites(filmId));\r\n                break;\r\n            default:\r\n                dispatch(removeFromHistory(filmId));\r\n        }\r\n        dispatch(saveList(listName));\r\n    }\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} filmId - id фильма.\r\n * @param {*} listName - имя списка для добавления/удаления фильма. По умолчанию - избранные фильмы.\r\n */\r\nexport const favoriteIconPush = (filmId, listName = \"favorites\") => {\r\n    return (dispatch, getState) => {\r\n        const { favorites } = getState().filmReducer;\r\n        let checkList = favorites.data.find(item => item.id === filmId);\r\n        if (!checkList) {\r\n            dispatch(addToListAndSave(filmId, listName));\r\n        } else {\r\n            dispatch(removeFromListAndSave(filmId, listName));\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Вычисляет случайный фильм отсутствующий в списках blacklist и alreadySeen, его добавляет в историю\r\n */\r\nexport const changeFilm = () => {\r\n    return (dispatch, getState) => {\r\n        const { films, blacklist, alreadySeen, settings } = getState().filmReducer;\r\n        const { types, ratings, years, genres, countries } = settings.filters;\r\n        const typesFilter = (film) => (types.length !== 1 || film.type === types[0]);\r\n        const ratingsFilter = (film) => (film.rate > ratings[0] && film.rate < ratings[1]);\r\n        const yearsFilter = (film) => (film.year > years[0] && film.year < years[1]);\r\n        const genresFilter = (film) => film.genres.some(genre => genres.includes(genre));\r\n        const countriesFilter = (film) => film.countries.some(country => countries.includes(country));\r\n        const filteredFilms = films.filter(film => (\r\n            [typesFilter, ratingsFilter, yearsFilter, genresFilter, countriesFilter].every(filter => {\r\n                //console.log('filter is', filter, film, filter(film))\r\n                return filter(film)\r\n            })\r\n        ));\r\n            // TODO доделать фильтрацию (сейчас не работает так как надо, где-то ошибка в фильтрах вроде как)\r\n\r\n        //console.log('films length', films.length);\r\n        //console.log('filtered films length', filteredFilms.length);\r\n        let film, randomIndex;\r\n        do {\r\n            randomIndex = ~~(Math.random() * films.length);\r\n            film = films[randomIndex];\r\n        } while (\r\n            blacklist.list[film.id] || alreadySeen.list[film.id]\r\n        )\r\n        dispatch(selectFilm(randomIndex));\r\n        dispatch(addToListAndSave(film.id));\r\n    }\r\n};\r\n\r\n/**\r\n * Загружает фильмы и запускает выбор одного из них\r\n */\r\nexport const fetchFilms = () => {\r\n    return dispatch => {\r\n        dispatch(loadFilmsStarted());\r\n\r\n        axios.get(\"./films.json\")\r\n            .then(response => {\r\n                dispatch(loadFilms(response.data));\r\n                dispatch(changeFilm());\r\n            })\r\n            .catch(err => {\r\n                dispatch(loadFilmsFailure(err.message));\r\n            });\r\n    }\r\n};","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport FilmCard from '../pages/FilmCard';\r\nimport { addToListAndSave, changeFilm } from '../store/actions/complexFilmActions';\r\n\r\nconst FilmCardContainer = ({ film, addToListAndSave, changeFilm, error }) => {\r\n    const handleChangeFilm = useCallback(() => {\r\n        changeFilm();\r\n    }, [changeFilm]);\r\n\r\n    const handleMoveFilmToBlacklist = useCallback(() => {\r\n        addToListAndSave(film.id, \"blacklist\");\r\n        handleChangeFilm();\r\n    }, [film, addToListAndSave, handleChangeFilm]);\r\n\r\n    const handleMoveFilmToAlreadySeen = useCallback(() => {\r\n        addToListAndSave(film.id, \"alreadySeen\");\r\n        handleChangeFilm();\r\n    }, [film, addToListAndSave, handleChangeFilm]);\r\n\r\n    return (\r\n        !film ? <Spinner /> : <FilmCard error={error} film={film} changeFilm={handleChangeFilm} removeFilm={handleMoveFilmToBlacklist} seenFilm={handleMoveFilmToAlreadySeen} />\r\n    )\r\n};\r\n\r\nFilmCardContainer.propTypes = {\r\n    error: PropTypes.string,\r\n    film: PropTypes.object,\r\n    addToListAndSave: PropTypes.func,\r\n    changeFilm: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    error: filmReducer.error,\r\n    film: filmReducer.film,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToListAndSave, changeFilm }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmCardContainer);","export const TYPES = [{value:'FILM', label:'Фильмы'},{value:'TV_SHOW', label:'Сериалы/Шоу'}];\r\nexport const RATINGS = { 5: 'от 5', 10: 'до 10' };\r\nexport const YEARS = { 1980: 'c 1980', 2021: 'по 2021' };\r\nexport const GENRES = [{value:\"Все\"},{value:\"документальный\"},{value:\"комедия\"},{value:\"короткометражка\"},{value:\"фэнтези\"},{value:\"мюзикл\"},{value:\"мелодрама\"},{value:\"мультфильм\"},{value:\"концерт\"},{value:\"музыка\"},{value:\"драма\"},{value:\"криминал\"},{value:\"фантастика\"},{value:\"биография\"},{value:\"ток-шоу\"},{value:\"боевик\"},{value:\"детский\"},{value:\"семейный\"},{value:\"история\"},{value:\"детектив\"},{value:\"игра\"},{value:\"военный\"},{value:\"приключения\"},{value:\"триллер\"},{value:\"реальное ТВ\"},{value:\"спорт\"},{value:\"ужасы\"},{value:\"аниме\"},{value:\"вестерн\"},{value:\"новости\"},{value:\"церемония\"},{value:\"фильм-нуар\"},{value:\"для взрослых\"}];\r\nexport const COUNTRIES = [{value:\"Все\"},{value:\"США\"},{value:\"Россия\"},{value:\"СССР\"},{value:\"Австралия\"},{value:\"Япония\"},{value:\"Великобритания\"},{value:\"Франция\"},{value:\"Корея Южная\"},{value:\"Нидерланды\"},{value:\"Индия\"},{value:\"Ирландия\"},{value:\"Канада\"},{value:\"Венгрия\"},{value:\"Италия\"},{value:\"Австрия\"},{value:\"Китай\"},{value:\"Германия\"},{value:\"Турция\"},{value:\"Украина\"},{value:\"Марокко\"},{value:\"Финляндия\"},{value:\"Испания\"},{value:\"Бельгия\"},{value:\"Германия (ФРГ)\"},{value:\"Новая Зеландия\"},{value:\"Польша\"},{value:\"Ботсвана\"},{value:\"Мальта\"},{value:\"Иран\"},{value:\"Швеция\"},{value:\"Армения\"},{value:\"Беларусь\"},{value:\"ЮАР\"},{value:\"Тайвань\"},{value:\"Мексика\"},{value:\"Аргентина\"},{value:\"Швейцария\"},{value:\"Колумбия\"},{value:\"Исландия\"},{value:\"Казахстан\"},{value:\"Индонезия\"},{value:\"Сингапур\"},{value:\"Чехословакия\"},{value:\"Узбекистан\"},{value:\"Норвегия\"},{value:\"Румыния\"},{value:\"Гонконг\"},{value:\"Люксембург\"},{value:\"Бразилия\"},{value:\"Дания\"},{value:\"Сербия и Черногория\"},{value:\"Грузия\"},{value:\"Филиппины\"},{value:\"Югославия\"},{value:\"Чехия\"},{value:\"ОАЭ\"},{value:\"Египет\"},{value:\"Израиль\"},{value:\"Болгария\"},{value:\"Ливан\"},{value:\"Тунис\"},{value:\"Венесуэла\"},{value:\"Монголия\"},{value:\"Югославия (ФР)\"},{value:\"Германия (ГДР)\"},{value:\"Азербайджан\"},{value:\"Куба\"},{value:\"Словакия\"},{value:\"Греция\"},{value:\"Лихтенштейн\"},{value:\"Эстония\"},{value:\"Молдова\"},{value:\"Хорватия\"},{value:\"Российская империя\"},{value:\"Перу\"},{value:\"Таиланд\"},{value:\"Алжир\"},{value:\"Киргизия\"},{value:\"Багамы\"},{value:\"Андорра\"},{value:\"Палестина\"},{value:\"Сербия\"},{value:\"Северная Македония\"},{value:\"Латвия\"},{value:\"Словения\"},{value:\"Французская Полинезия\"},{value:\"Шри-Ланка\"},{value:\"Чили\"},{value:\"Бангладеш\"},{value:\"Камбоджа\"},{value:\"Португалия\"},{value:\"Пуэрто Рико\"},{value:\"Танзания\"},{value:\"Босния и Герцеговина\"},{value:\"Уругвай\"},{value:\"Ямайка\"},{value:\"Саудовская Аравия\"},{value:\"Вьетнам\"},{value:\"Косово\"},{value:\"Руанда\"},{value:\"Сирия\"},{value:\"Намибия\"},{value:\"Македония\"},{value:\"Литва\"},{value:\"Конго\"},{value:\"Кения\"},{value:\"Ирак\"},{value:\"Бутан\"},{value:\"Кувейт\"},{value:\"Ливия\"},{value:\"Монако\"},{value:\"Малайзия\"},{value:\"Корея Северная\"},{value:\"Афганистан\"},{value:\"Таджикистан\"},{value:\"Катар\"},{value:\"Ватикан\"},{value:\"Кипр\"},{value:\"Непал\"},{value:\"Сальвадор\"},{value:\"Малави\"},{value:\"Папуа - Новая Гвинея\"},{value:\"Гана\"},{value:\"Гваделупа\"},{value:\"Уганда\"},{value:\"Доминикана\"},{value:\"Пакистан\"},{value:\"Мадагаскар\"},{value:\"Бахрейн\"},{value:\"Замбия\"},{value:\"Эквадор\"},{value:\"Каймановы острова\"},{value:\"Макао\"},{value:\"Американское Самоа\"},{value:\"Иордания\"},{value:\"Белиз\"},{value:\"Лаос\"},{value:\"Гватемала\"},{value:\"Эфиопия\"},{value:\"Буркина-Фасо\"},{value:\"Сенегал\"},{value:\"Йемен\"},{value:\"Бермуды\"},{value:\"Панама\"},{value:\"Албания\"},{value:\"Боливия\"},{value:\"Камерун\"},{value:\"Аруба\"},{value:\"Нигерия\"},{value:\"Черногория\"},{value:\"Туркменистан\"},{value:\"Антильские Острова\"},{value:\"Сомали\"},{value:\"Судан\"},{value:\"Новая Каледония\"},{value:\"Либерия\"},{value:\"Босния\"},{value:\"Берег Слоновой кости\"},{value:\"Вануату\"},{value:\"Парагвай\"},{value:\"Зимбабве\"},{value:\"Мавритания\"},{value:\"Мали\"},{value:\"Фиджи\"},{value:\"Чад\"},{value:\"Тринидад и Тобаго\"},{value:\"Гренландия\"},{value:\"Маврикий\"},{value:\"Ангола\"},{value:\"Коста-Рика\"},{value:\"Виргинские Острова (Великобритания)\"},{value:\"Никарагуа\"},{value:\"Мозамбик\"},{value:\"Гаити\"},{value:\"Мальдивы\"},{value:\"Мартиника\"},{value:\"Гибралтар\"},{value:\"Гвинея\"},{value:\"Барбадос\"},{value:\"Реюньон\"},{value:\"Заир\"},{value:\"Гондурас\"},{value:\"Антарктида\"},{value:\"Конго (ДРК)\"},{value:\"Французская Гвиана\"},{value:\"Мьянма\"},{value:\"Бирма\"}];","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { clearLists } from '../../store/actions/filmActions';\r\n\r\nimport { setSettingsAndSave } from '../../store/actions/complexFilmActions';\r\n\r\n//import { setSettingsAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport { Typography, Button, Slider, Select, Switch } from 'antd';\r\nimport Navigation from '../../components/Navigation';\r\nimport { TYPES, RATINGS, YEARS, GENRES, COUNTRIES } from './config';\r\nimport './Settings.scss';\r\n//import ThemeSwitch from '../../components/ThemeSwitch/ThemeSwitch';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Settings = ({ settings, clearLists, setSettingsAndSave }) => {\r\n    const [selectedTypes, setSelectedTypes] = React.useState(settings.filters.types);\r\n    const [selectedRatings, setSelectedRatings] = React.useState(settings.filters.ratings);\r\n    const [selectedYears, setSelectedYears] = React.useState(settings.filters.years);\r\n    const [selectedGenres, setSelectedGenres] = React.useState(settings.filters.genres);\r\n    const [selectedCountries, setSelectedCountries] = React.useState(settings.filters.countries);\r\n    const [darkMode, setDarkMode] = React.useState(settings.dark);\r\n\r\n    const setSettings = useCallback((value, type) => {\r\n        // меняем локальное состояние компонента\r\n        switch (type) {\r\n            case 'types':\r\n                setSelectedTypes(value);\r\n                break;\r\n            case 'ratings':\r\n                setSelectedRatings(value);\r\n                break;\r\n            case 'years':\r\n                setSelectedYears(value);\r\n                break;\r\n            case 'genres':\r\n                setSelectedGenres(value);\r\n                break;\r\n            case 'countries':\r\n                setSelectedCountries(value);\r\n                break;\r\n            case 'mode':\r\n                setDarkMode(value);\r\n                document.body.classList.toggle(\"dark\", value);\r\n                break;\r\n        }\r\n\r\n        // отправляем новое состояние в store\r\n        setSettingsAndSave({ \r\n            dark: (type === 'mode') ? value : darkMode,\r\n            filters: {\r\n                types: (type === 'types') ? value : selectedTypes,\r\n                ratings: (type === 'ratings') ? value : selectedRatings,\r\n                years: (type === 'years') ? value : selectedYears,\r\n                genres: (type === 'genres') ? value : selectedGenres,\r\n                countries: (type === 'countries') ? value : selectedCountries\r\n            }\r\n        });\r\n    }, [setSettingsAndSave]);\r\n   \r\n\r\n    const handleSelect = (value, type) => {\r\n        if (value === \"Все\") {\r\n            (type === \"genres\")\r\n                ? setSelectedGenres(GENRES.map(genre => genre.value))\r\n                : setSelectedCountries(COUNTRIES.map(country => country.value));\r\n        }\r\n    }\r\n\r\n    const handleDeSelect = (value, type) => {\r\n        if (value === \"Все\") {\r\n            (type === \"genres\") ? setSelectedGenres([]) : setSelectedCountries([])\r\n        }\r\n        if (type === \"types\" && selectedTypes.length === 1) {\r\n            setSelectedTypes(TYPES.map(type => type.value))\r\n        }\r\n    }\r\n\r\n    const handleClearSettings = () => {\r\n        clearLists();\r\n        ['blacklist', 'alreadySeen', 'history', 'favorites'].forEach(list => {localStorage.removeItem(list)});\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings--wrapper theme\">\r\n            <div className=\"settings__header theme\">\r\n                <div className=\"settings__header--title\" level={2}>Настройки</div>\r\n            </div>\r\n            <div className=\"settings__content\">\r\n                <Link type=\"secondary\" className=\"settings__content--login\" to='/login'>\r\n                    <Button size=\"large\">Вход / Регистрация</Button>\r\n                </Link>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Темная версия оформления</Text>\r\n                    <Switch onChange={(val) => {setSettings(val, \"mode\")}} defaultChecked={darkMode} />\r\n                </div>\r\n\r\n                <Title level={3}>Настройки поиска</Title>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Тип</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={selectedTypes}\r\n                            onChange={(val) => {setSettings(val, \"types\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"types\")}}\r\n                            options={TYPES}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row theme\">\r\n                    <Text className=\"theme\">Рейтинг</Text>\r\n                    <Slider className=\"settings__content--slider\" range\r\n                            marks={RATINGS} min={5} max={10} step={0.5} defaultValue={selectedRatings}\r\n                            onChange={(val) => {setSettings(val, \"ratings\")}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Годы</Text>\r\n                    <Slider className=\"settings__content--slider\" range\r\n                            marks={YEARS} min={1980} max={2021} defaultValue={selectedYears}\r\n                            onChange={(val) => {setSettings(val, \"years\")}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Жанры</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={selectedGenres}\r\n                            onSelect={(val) => {handleSelect(val, \"genres\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"genres\")}}\r\n                            onChange={(val) => {setSettings(val, \"genres\")}}\r\n                            options={GENRES}\r\n                            maxTagCount={3}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Страны</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={selectedCountries}\r\n                            onSelect={(val) => {handleSelect(val, \"countries\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"countries\")}}\r\n                            onChange={(val) => {setSettings(val, \"countries\")}}\r\n                            options={COUNTRIES}\r\n                            maxTagCount={4}\r\n                    />\r\n                </div>\r\n\r\n                <Button type=\"secondary\" size=\"large\" className=\"settings__content--reset\" onClick={handleClearSettings}>\r\n                    Сбросить настройки\r\n                </Button>\r\n\r\n            </div>\r\n            <Navigation checked={ 'settings' } />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    settings: filmReducer.settings,\r\n});\r\n\r\nSettings.propTypes = {\r\n    clearLists: PropTypes.func,\r\n    setSettingsAndSave: PropTypes.func,\r\n    settings: PropTypes.object\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ clearLists, setSettingsAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ListLink.scss';\r\n\r\nconst ListLink = (props) => {\r\n    return (\r\n        <div className=\"listLink--wrapper\">\r\n            <p className=\"listLink__title\">{props.children}</p>\r\n            <p className=\"listLink__length\">{props.listLength}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nListLink.propTypes = {\r\n    listLength: PropTypes.number,\r\n    children: PropTypes.string\r\n}\r\n\r\nexport default ListLink;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Lists.scss';\r\nimport Navigation from '../../components/Navigation';\r\nimport ListLink from '../../components/ListLink';\r\n\r\nconst Lists = ({ blacklist, alreadySeen, history, favorites }) => {\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">Списки фильмов</div>\r\n            <Link className=\"lists__link--color\" to=\"/history\"><ListLink listLength={history.data.length}>История предложений</ListLink></Link>\r\n            <Link className=\"lists__link--color\" to=\"/seenList\"><ListLink listLength={alreadySeen.data.length}>Просмотренные фильмы</ListLink></Link>\r\n            <Link className=\"lists__link--color\" to=\"/blacklist\"><ListLink listLength={blacklist.data.length}>Отклоненные фильмы</ListLink></Link>\r\n            <Link className=\"lists__link--color\" to=\"/favorites\"><ListLink listLength={favorites.data.length}>Избранные</ListLink></Link>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nLists.propTypes = {\r\n    history: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    blacklist: PropTypes.object,\r\n    alreadySeen: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    history: filmReducer.history,\r\n    favorites: filmReducer.favorites,\r\n    blacklist: filmReducer.blacklist,\r\n    alreadySeen: filmReducer.alreadySeen\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lists);","import React from 'react';\r\n\r\nconst Bookmark = ({ status }) => {\r\n    return (\r\n        <svg version=\"1.1\" width=\"20\" height=\"20\"\r\n            viewBox=\"0 0 423.936 423.936\" fill={ status ? \"#DA952D\" : \"\" }>\r\n            <path d=\"M327.68,0H96.256c-22.528,0-40.96,18.432-40.96,40.96v357.376c0,9.728,5.632,18.944,14.336,23.04\r\n\t\t\tc9.216,4.096,19.456,3.072,27.136-3.072l0.512-0.512l114.688-96.768l114.688,96.768l0.512,0.512\r\n\t\t\tc4.608,3.584,10.24,5.632,15.872,5.632c3.584,0,7.68-1.024,11.264-3.072c8.704-4.096,14.336-13.312,14.336-23.04V40.96\r\n\t\t\tC368.64,18.432,350.208,0,327.68,0z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Bookmark;","import Icon from '@ant-design/icons';\r\n\r\nconst TrashBinSvg = () => (\r\n    <svg width=\"20\" height=\"20\" viewBox=\"-57 0 512 512\"  ><path d=\"m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0\" /><path d=\"m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0\" /><path d=\"m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0\" /></svg>\r\n);\r\n\r\nconst TrashBin = props => <Icon component={TrashBinSvg} {...props} />;\r\n\r\nexport default TrashBin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Star from '../icons/Star';\r\nimport Bookmark from '../icons/Bookmark';\r\nimport TrashBin from '../icons/TrashBin';\r\n\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = ({ removeFromList, addToFavorites, name, secondName, year, rate, age, genre, status }) => {\r\n    return (\r\n        <div className=\"list-item\">\r\n            <div className=\"list-item__about\">\r\n                <p className=\"list-item__name theme\">{ name }<span className=\"list-item__year\"> ({ year })</span></p>\r\n                <p className=\"list-item__second-name\">{ secondName }</p>\r\n                <p className=\"list-item__genre\">{ genre }<span className=\"list-item__age\">{ age && `${age}+` }</span></p>\r\n            </div>\r\n            <div className=\"list-item__actions-container\">\r\n                <div className=\"list-item__rating\">\r\n                    <Star />\r\n                    <div className=\"list-item__rate\">{ rate }</div>\r\n                </div>\r\n                <div className=\"list-item__buttons\">\r\n                    {!!addToFavorites && <button className=\"favorite\" onClick={ addToFavorites }><Bookmark status={ status } /></button>}\r\n                    <button onClick={ removeFromList }><TrashBin /></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nListItem.propTypes = {\r\n    removeFromList: PropTypes.func,\r\n    addToFavorites: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(undefined)]),\r\n    name: PropTypes.string,\r\n    secondName: PropTypes.string,\r\n    year: PropTypes.number,\r\n    rate: PropTypes.number,\r\n    age: PropTypes.number,\r\n    genre: PropTypes.array,\r\n    status: PropTypes.oneOfType([PropTypes.bool, PropTypes.instanceOf(undefined)]),\r\n};\r\n\r\nexport default ListItem; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './SeenList.scss';\r\n\r\n\r\nconst SeenList = ({ films, favorites, alreadySeen, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && alreadySeen.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"alreadySeen\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"seenList--wrapper\">\r\n            <div className=\"seenList__header theme\">Просмотренные</div>\r\n            <div className=\"seenList__list\">\r\n                { list?.length ? list : (<div className=\"seenList__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"seenList__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nSeenList.propTypes = {\r\n    alreadySeen: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites,\r\n    alreadySeen: filmReducer.alreadySeen\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SeenList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { removeFromListAndSave, favoriteIconPush } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './History.scss';\r\n\r\n\r\nconst History = ({ films, favorites, history, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && history.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id);\r\n        };\r\n        return <ListItem key={`${film.id}${item.timestamp}`} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"history--wrapper\">\r\n            <div className=\"history__header theme\">История предложений</div>\r\n            <div className=\"history__list\">\r\n                { list?.length ? list : (<div className=\"history__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"history__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nHistory.propTypes = {\r\n    history: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    history: filmReducer.history,\r\n    favorites: filmReducer.favorites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Blacklist.scss';\r\n\r\n\r\nconst Blacklist = ({ films, favorites, blacklist, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && blacklist.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"blacklist\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"blacklist--wrapper\">\r\n            <div className=\"blacklist__header theme\">Отклоненные</div>\r\n            <div className=\"blacklist__list\"> \r\n            { list?.length ? list : (<div className=\"blacklist__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"blacklist__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nBlacklist.propTypes = {\r\n    blacklist: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites,\r\n    blacklist: filmReducer.blacklist\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blacklist);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Favorites.scss';\r\n\r\n\r\nconst Favorites = ({ films, favorites, removeFromListAndSave }) => {\r\n    let list = films.length && favorites.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"favorites\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} removeFromList={handleRemoveFromList} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"favorites--wrapper\">\r\n            <div className=\"favorites__header theme\">Избранные</div>\r\n            <div className=\"favorites__list\">\r\n                {list?.length ? list : (<div className=\"favorites__placeholder\" />)}\r\n            </div>\r\n            <div className=\"favorites__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nFavorites.propTypes = {\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Home from \"../pages/Home/Home\"\r\nimport LoginForm from '../pages/LoginPage';\r\nimport RegistrationForm from \"../pages/RegistrationPage\";\r\nimport FilmCardContainer from './FilmCardContainer';\r\nimport Settings from '../pages/Settings';\r\nimport Lists from '../pages/Lists';\r\nimport SeenList from '../containers/SeenList';\r\nimport History from '../containers/History';\r\nimport Blacklist from '../containers/Blacklist';\r\nimport Favorites from '../containers/Favorites';\r\n\r\nconst Router = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ Home } />\r\n            <Route path=\"/login\" component={ LoginForm } />\r\n            <Route path=\"/registration\" component={ RegistrationForm } />\r\n            <Route path=\"/film\" component={ FilmCardContainer } />\r\n            <Route path=\"/settings\" component={ Settings } />\r\n            <Route path=\"/lists\" component={ Lists } />\r\n            <Route path=\"/history\" component={ History } />\r\n            <Route path=\"/seenList\" component={ SeenList } />\r\n            <Route path=\"/blacklist\" component={ Blacklist } />\r\n            <Route path=\"/favorites\" component={ Favorites } />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Router;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Router from './containers/Router';\r\nimport { fetchFilms } from './store/actions/complexFilmActions';\r\n\r\nconst App = ({ fetchFilms }) => {\r\n  useEffect(() => {\r\n    fetchFilms();\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  fetchFilms: PropTypes.func\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchFilms }, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import update from 'react-addons-update';\r\nimport { ADD_TO_HISTORY, ADD_TO_ALREADY_SEEN, ADD_TO_BLACKLIST, LOAD_FILMS, SELECT_FILM, LOAD_FILMS_STARTED, LOAD_FILMS_FAILURE, CLEAR_LISTS, ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, REMOVE_FROM_BLACKLIST, REMOVE_FROM_ALREADY_SEEN, REMOVE_FROM_HISTORY, SET_SETTINGS } from '../actions/filmActions';\r\n\r\nconst prepareList = (listName) => localStorage.getItem(listName) ? JSON.parse(localStorage.getItem(listName)) : { data: [], list: {} };\r\nconst prepareSettings = () => localStorage.getItem('settings') \r\n                            ? JSON.parse(localStorage.getItem('settings')) \r\n                            : { \r\n                                dark: false,\r\n                                filters: {\r\n                                    types: ['FILM'],\r\n                                    genres: ['боевик','комедия', 'драма'],\r\n                                    countries: ['Россия','США'],\r\n                                    ratings: [7, 9],\r\n                                    years: [1990, 2020]\r\n                                }\r\n                            };\r\n\r\nconst initStore = {\r\n    films: [],\r\n    film: null,\r\n    history: prepareList('history'),\r\n    blacklist: prepareList('blacklist'),\r\n    alreadySeen: prepareList('alreadySeen'),\r\n    temporary: prepareList('temporary'),\r\n    favorites: prepareList('favorites'),\r\n    settings: prepareSettings(),\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport default function filmReducer(store = initStore, action) {\r\n    switch (action.type) {\r\n        case LOAD_FILMS_STARTED: {\r\n            return update(store, {\r\n                isLoading: {\r\n                    $set: true\r\n                }\r\n            });\r\n        }\r\n        case LOAD_FILMS_FAILURE: {\r\n            return update(store, {\r\n                isLoading: {\r\n                    $set: false\r\n                },\r\n                error: {\r\n                    $set: action.error\r\n                }\r\n            });\r\n        }\r\n        case LOAD_FILMS: {\r\n            return update(store, {\r\n                films: {\r\n                    $set: [...action.films]\r\n                },\r\n                error: {\r\n                    $set: null\r\n                }\r\n            });\r\n        }\r\n        case SELECT_FILM: {\r\n            return update(store, {\r\n                film: {\r\n                    $set: { ...store.films[action.film] }\r\n                },\r\n                isLoading: {\r\n                    $set: false\r\n                },\r\n                error: {\r\n                    $set: null\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_HISTORY: {\r\n            return update(store, {\r\n                history: {\r\n                    $merge: {\r\n                        ...store.history,\r\n                        data: [\r\n                            ...store.history.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.history.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_BLACKLIST: {\r\n            return update(store, {\r\n                blacklist: {\r\n                    $merge: {\r\n                        ...store.blacklist,\r\n                        data: [\r\n                            ...store.blacklist.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.blacklist.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_ALREADY_SEEN: {\r\n            return update(store, {\r\n                alreadySeen: {\r\n                    $merge: {\r\n                        ...store.alreadySeen,\r\n                        data: [\r\n                            ...store.alreadySeen.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.alreadySeen.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_FAVORITES: {\r\n            return update(store, {\r\n                favorites: {\r\n                    $merge: {\r\n                        ...store.favorites,\r\n                        data: [\r\n                            ...store.favorites.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.favorites.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_HISTORY: {\r\n            let deleteFilm = store.history.data.find(film => film.id === action.filmId);\r\n            store.history.data.splice(store.history.data.indexOf(deleteFilm), 1);\r\n            delete store.history.list[action.filmId];\r\n            return update(store, {\r\n                history: {\r\n                    $set: {...store.history}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_ALREADY_SEEN: {\r\n            let deleteFilm = store.alreadySeen.data.find(film => film.id === action.filmId);\r\n            store.alreadySeen.data.splice(store.alreadySeen.data.indexOf(deleteFilm), 1);\r\n            delete store.alreadySeen.list[action.filmId];\r\n            return update(store, {\r\n                alreadySeen: {\r\n                    $set: {...store.alreadySeen}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_BLACKLIST: {\r\n            let deleteFilm = store.blacklist.data.find(film => film.id === action.filmId);\r\n            store.blacklist.data.splice(store.blacklist.data.indexOf(deleteFilm), 1);\r\n            delete store.blacklist.list[action.filmId];\r\n            return update(store, {\r\n                blacklist: {\r\n                    $set: {...store.blacklist}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_FAVORITES: {\r\n            let deleteFilm = store.favorites.data.find(film => film.id === action.filmId);\r\n            store.favorites.data.splice(store.favorites.data.indexOf(deleteFilm), 1);\r\n            delete store.favorites.list[action.filmId];\r\n            return update(store, {\r\n                favorites: {\r\n                    $set: {...store.favorites}\r\n                }\r\n            });\r\n        }\r\n        case CLEAR_LISTS: {\r\n            return update(store, {\r\n                history: {\r\n                    $set: {\r\n                        data: [],\r\n                        list: {}\r\n                    }\r\n                },\r\n                favorites: {\r\n                    $set: {\r\n                        data: [],\r\n                        list: {}\r\n                    }\r\n                },\r\n                alreadySeen: {\r\n                    $set: {\r\n                        data: [],\r\n                        list: {}\r\n                    }\r\n                },\r\n                blacklist: {\r\n                    $set: {\r\n                        data: [],\r\n                        list: {}\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case SET_SETTINGS: {\r\n            return update(store, {\r\n                settings: {\r\n                    $set: {\r\n                        dark: action.settings.dark,\r\n                        filters: {\r\n                            //...store.settings.filters,\r\n                            types: [...action.settings.filters.types],\r\n                            ratings: [...action.settings.filters.ratings],\r\n                            years: [...action.settings.filters.years],\r\n                            genres: [...action.settings.filters.genres],\r\n                            countries: [...action.settings.filters.countries]\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport filmReducer from './filmReducer';\r\n\r\n// eslint-disable-next-line\r\nexport default history => combineReducers({\r\n    router: connectRouter(history),\r\n    filmReducer,\r\n});","import filmMiddleware from './filmMiddleware';\r\n\r\n// eslint-disable-next-line\r\nexport default [\r\n    filmMiddleware,\r\n];","// eslint-disable-next-line\r\nexport default store => next => action => {\r\n    return next(action);\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport RootReducers from './reducers';\r\nimport middlewares from './middlewares';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// тернарник внутри compose не сработает\r\nconst composer = window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(\r\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n) : compose(\r\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\r\n);\r\n\r\nexport const store = createStore(\r\n    RootReducers(history),\r\n    composer,\r\n);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./styles/styles.scss\";\r\n\r\nimport App from \"./App\";\r\nimport { store, history } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <App />\r\n      </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}