{"version":3,"sources":["reportWebVitals.js","components/icons/Search.jsx","pages/Home/Home.jsx","components/CustomLink.jsx","pages/LoginPage/LoginPage.jsx","pages/RegistrationPage/RegistrationPage.jsx","components/Spinner/Spinner.jsx","pages/FilmCard/ErrorFilmCard.jsx","components/FilmCardButton/FilmCardButton.jsx","components/icons/Star.jsx","components/icons/Settings.jsx","components/icons/Hamburger.jsx","components/Navigation/Navigation.jsx","pages/FilmCard/FilmCard.jsx","store/actions/filmActions.js","store/actions/complexFilmActions.js","containers/FilmCardContainer.jsx","pages/Settings/config.js","store/actions/themeAction.js","components/ThemeSwitch/ThemeSwitch.jsx","pages/Settings/Settings.jsx","components/ListLink/ListLink.jsx","pages/Lists/Lists.jsx","components/icons/Bookmark.jsx","components/icons/TrashBin.jsx","components/ListItem/ListItem.jsx","containers/SeenList/SeenList.jsx","containers/History/History.jsx","containers/Blacklist/Blacklist.jsx","containers/Favorites/Favorites.jsx","containers/Router.jsx","App.jsx","store/reducers/filmReducer.js","store/reducers/themeReducer.js","store/reducers/index.js","store/middlewares/index.js","store/middlewares/filmMiddleware.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchSvg","version","x","y","viewBox","width","height","d","Search","props","Icon","component","Home","className","to","CustomLink","history","onClick","Tag","tag","rest","event","push","defaultProps","withRouter","LoginForm","name","initialValues","remember","onFinish","values","alert","console","log","level","Item","rules","required","message","placeholder","Password","type","noStyle","valuePropName","htmlType","Button","RegistrationPage","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Spinner","indicator","LoadingOutlined","spin","ErrorFilmCard","error","id","htmlFor","FilmCardButton","eventAction","children","Star","xmlns","fill","SettingsSvg","Settings","HamburgerSvg","Hamburger","Navigation","Group","defaultValue","checked","Radio","IMAGE_ENDPOINT","FilmCard","film","changeFilm","seenFilm","removeFilm","cardEndRef","useRef","handleScrollToBottom","useCallback","current","scrollIntoView","behavior","useEffect","handleChangeFontSize","length","ageFormatted","age","alt","src","preview","style","fontSize","rate","secondName","year","countries","join","genres","description","ref","LOAD_FILMS","LOAD_FILMS_STARTED","LOAD_FILMS_FAILURE","ADD_TO_HISTORY","ADD_TO_BLACKLIST","ADD_TO_ALREADY_SEEN","ADD_TO_FAVORITES","REMOVE_FROM_HISTORY","REMOVE_FROM_ALREADY_SEEN","REMOVE_FROM_BLACKLIST","REMOVE_FROM_FAVORITES","SELECT_FILM","CLEAR_LISTS","addToHistory","filmId","addToBlacklist","addToAlreadySeen","addToFavorites","removeFromHistory","removeFromAlreadySeen","removeFromBlacklist","removeFromFavorites","clearLists","saveList","listName","dispatch","getState","list","filmReducer","localStorage","setItem","JSON","stringify","addToListAndSave","removeFromListAndSave","favoriteIconPush","favorites","data","find","item","randomIndex","films","blacklist","alreadySeen","Math","random","selectFilm","fetchFilms","axios","get","response","catch","err","connect","bindActionCreators","handleChangeFilm","handleMoveFilmToBlacklist","handleMoveFilmToAlreadySeen","RATINGS","5","10","YEARS","1980","2021","GENRES","COUNTRIES","CHANGE_THEME","changeTheme","isLightTheme","themeReducer","useDispatch","onChange","document","body","classList","toggle","Title","Typography","Text","React","useState","selectedGenres","setSelectedGenres","selectedCountries","setSelectedCountries","handleSelect","map","genre","country","handleDeSelect","size","range","marks","min","max","step","mode","showArrow","onSelect","val","onDeselect","options","maxTagCount","removeItem","ListLink","listLength","Bookmark","status","TrashBinSvg","TrashBin","ListItem","removeFromList","reverse","timestamp","Router","exact","path","RegistrationForm","FilmCardContainer","Lists","History","SeenList","Blacklist","Favorites","prepareList","getItem","parse","initStore","temporary","isLoading","store","action","update","$set","$merge","Date","now","deleteFilm","splice","indexOf","next","createBrowserHistory","composer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","thunk","middlewares","createStore","combineReducers","router","connectRouter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7d6dc82b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Icon from '@ant-design/icons';\n\nconst SearchSvg = () => (\n    <svg version=\"1.1\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 37.166 37.166\" width=\"1em\" height=\"1em\">\n        <path d=\"M35.829,32.045l-6.833-6.833c-0.513-0.513-1.167-0.788-1.836-0.853c2.06-2.567,3.298-5.819,3.298-9.359\n\tc0-8.271-6.729-15-15-15c-8.271,0-15,6.729-15,15c0,8.271,6.729,15,15,15c3.121,0,6.021-0.96,8.424-2.598\n\tc0.018,0.744,0.305,1.482,0.872,2.052l6.833,6.833c0.585,0.586,1.354,0.879,2.121,0.879s1.536-0.293,2.121-0.879\n\tC37.001,35.116,37.001,33.217,35.829,32.045z M15.458,25c-5.514,0-10-4.484-10-10c0-5.514,4.486-10,10-10c5.514,0,10,4.486,10,10\n\tC25.458,20.516,20.972,25,15.458,25z\"/>\n    </svg>\n);\n\nconst Search = props => <Icon component={ SearchSvg } { ...props } />;\n\nexport default Search;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Search from '../../components/icons/Search';\n\nimport './Home.scss';\n\nconst Home = (props) => {\n  return (\n    <div className=\"main-page\">\n      <h1 className=\"main-page__title theme\">gotfilm</h1>\n      <Link className=\"main-page__icon\" to=\"/film\">\n        <Search className=\"search-icon_home theme\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nconst CustomLink = ({ history, to, onClick, tag: Tag, ...rest }) => (\n    <Tag\n        { ...rest }\n        onClick={ (event) => {\n            onClick(event);\n            history.push(to)\n        } }\n    />\n);\n\nCustomLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired\n    }).isRequired,\n    onClick: PropTypes.func\n};\nCustomLink.defaultProps = {\n    onClick: () => { }\n};\nexport default withRouter(CustomLink);","import React from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd'\nimport Title from 'antd/lib/typography/Title'\nimport { Link } from 'react-router-dom'\n\nimport './LoginPage.scss'\nimport CustomLink from '../../components/CustomLink'\n\nconst LoginForm = (props) => {\n  const onFinish = (values) => {\n    alert('Логин, пароль, статус чекбокса выведены в консоль.')\n    console.log('Received values of form: ', values)\n  }\n\n  return (\n    <div className='formWrapper theme'>\n      <Form\n        name='login-form'\n        className='loginForm theme'\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <Title className='loginForm__title' level={2}>\n          Вход\n        </Title>\n        <Form.Item\n          name='username'\n          rules={[\n            {\n              required: true,\n              message: 'Пожалуйста введите имя или ник!',\n            },\n          ]}\n        >\n          <label className='theme'>\n            Имя пользователя\n            <Input placeholder='Ваше имя' />\n          </label>\n        </Form.Item>\n\n        <Form.Item\n          name='password'\n          rules={[\n            {\n              required: true,\n              message: 'Пожалуйста введите пароль!',\n            },\n          ]}\n        >\n          <label className='theme'>\n            Пароль\n            <Input.Password type='password' placeholder='Ваш пароль' />\n          </label>\n        </Form.Item>\n\n        <Form.Item>\n          <Form.Item name='remember' noStyle valuePropName='checked'>\n            <Checkbox className='theme'>Запомнить меня</Checkbox>\n          </Form.Item>\n\n          <Link className='loginForm__forgot' to='/recovery_password'>\n            Забыли пароль?\n          </Link>\n        </Form.Item>\n\n        <Form.Item>\n          <Button htmlType='submit' className='loginForm__button'>\n            войти\n          </Button>\n          <div className='loginForm--switcher theme'>\n            или{' '}\n            <Link className='loginForm__linkToRegistration' to='/registration'>\n              зарегистрировать аккаунт\n            </Link>\n          </div>\n        </Form.Item>\n      </Form>\n      <CustomLink\n        className='linkToSettings loginForm__button'\n        to='/settings'\n        tag={Button}\n      >\n        Назад к настройкам\n      </CustomLink>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import { Form, Input, Button, Checkbox } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Link } from \"react-router-dom\";\nimport CustomLink from \"../../components/CustomLink\";\n\nimport \"./RegistrationPage.scss\";\n\nconst RegistrationPage = (props) => {\n  const onFinish = (values) => {\n    alert(\n      \"Юзернейм, email, пароль, подтверждение пароля, статус чекбокса выведены в консоль.\"\n    );\n    console.log(\"Received values of form: \", values);\n  };\n\n  return (\n    <div className=\"formWrapper theme\">\n      <Form\n        name=\"registration-form\"\n        className=\"regForm theme\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <Title className=\"regForm__title\" level={2}>\n          Регистрация\n        </Title>\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Пожалуйста введите имя или ник!\",\n            },\n          ]}\n        >\n          <label className=\"theme\">\n            Имя пользователя\n            <Input placeholder=\"Ваше имя\" />\n          </label>\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Введённый почтвой адрес не корректен\",\n            },\n            {\n              required: true,\n              message: \"Пожалуйста введите свою почту\",\n            },\n          ]}\n        >\n          <label className=\"theme\">\n            E-mail\n            <Input placeholder=\"Ваша почта\" />\n          </label>\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Пожалуйста введите пароль!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <label className=\"theme\">\n            Пароль\n            <Input.Password placeholder=\"Ваш пароль\" />\n          </label>\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Пожалуйста подтвердите введённый пароль!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  new Error(\"Введённые пароли несовпадают!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <label className=\"theme\">\n            Подтверждение пароля\n            <Input.Password placeholder=\"Подтвердите свой пароль\" />\n          </label>\n        </Form.Item>\n\n        <Form.Item\n          name=\"agreement\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              validator: (_, value) =>\n                value\n                  ? Promise.resolve()\n                  : Promise.reject(\n                      new Error(\"Для регистрации примите соглашение\")\n                    ),\n            },\n          ]}\n        >\n          <Checkbox className=\"theme\">\n            Я прочитал(а){\" \"}\n            <Link className=\"regForm__agreement\" to=\"/agreement\">\n              соглашение\n            </Link>\n          </Checkbox>\n        </Form.Item>\n\n        <Form.Item>\n          <Button htmlType=\"submit\" className=\"regForm__button\">\n            Зарегистрироваться\n          </Button>\n        </Form.Item>\n\n        <div className=\"regForm--switcher theme\">\n          или{\" \"}\n          <Link className=\"regForm__linkToLogin\" to=\"/login\">\n            уже есть аккаунт\n          </Link>\n        </div>\n      </Form>\n      <CustomLink\n        className='linkToSettings loginForm__button'\n        to='/settings'\n        tag={Button}\n      >\n        Назад к настройкам\n      </CustomLink>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport './Spinner.scss';\n\nconst Spinner = (props) => {\n    return <Spin className=\"loadingSpinner\" indicator={<LoadingOutlined spin />} />\n};\n\nexport default Spinner;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FilmCard.scss';\n\nconst ErrorFilmCard = ({ error }) => {\n    return (\n        <div className=\"filmCard--wrapper\">\n            <div className=\"filmCard__poster\"></div>\n            <div className=\"filmCard__infoBlock\">\n                <div className=\"filmCard__infoBlock--titleWrapper\">\n                    <p className=\"filmCard__infoBlock__rate\">\n                    </p>\n                </div>\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\n                    <p className=\"filmCard__infoBlock__secondTitle\"></p>\n                    <p className=\"filmCard__infoBlock__year\"></p>\n                </div>\n                <p className=\"filmCard__infoBlock__error\"><span>{error}</span></p>\n                <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\n                <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\n                    <p className=\"filmCard__infoBlock__description\"></p>\n                </label>\n            </div>\n            <div className=\"filmCard__footer\">\n                <div className=\"filmCard__footer__buttonGroup\">\n                </div>\n                <div className=\"filmCard__footer__emptyBlock\" ></div>\n            </div>\n            <div className=\"navigation\"></div>\n        </div>\n    )\n};\n\nErrorFilmCard.propTypes = {\n    error: PropTypes.string\n};\n\nexport default ErrorFilmCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport './FilmCardButton.scss';\n\nconst FilmCardButton = (props) => {\n    return (\n        <Button onClick={props.eventAction} className=\"button\">{props.children}</Button>\n    )\n};\n\nFilmCardButton.propTypes = {\n    eventAction: PropTypes.func,\n    children: PropTypes.string\n}\n\nexport default FilmCardButton;","import React from 'react';\n\nconst Star = (props) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 676 400\" fill=\"#DA952D\"><path d=\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"></path></svg>\n    )\n}\n\nexport default Star;","import Icon from '@ant-design/icons';\n\nconst SettingsSvg = () => (\n    <svg viewBox=\"0 0 48 48\" width=\"35px\" height=\"35px\"><path d=\"M39.139,26.282C38.426,25.759,38,24.919,38,24.034s0.426-1.725,1.138-2.247l3.294-2.415\tc0.525-0.386,0.742-1.065,0.537-1.684c-0.848-2.548-2.189-4.872-3.987-6.909c-0.433-0.488-1.131-0.642-1.728-0.38l-3.709,1.631\tc-0.808,0.356-1.749,0.305-2.516-0.138c-0.766-0.442-1.28-1.23-1.377-2.109l-0.446-4.072c-0.071-0.648-0.553-1.176-1.191-1.307\tc-2.597-0.531-5.326-0.54-7.969-0.01c-0.642,0.129-1.125,0.657-1.196,1.308l-0.442,4.046c-0.097,0.88-0.611,1.668-1.379,2.11\tc-0.766,0.442-1.704,0.495-2.515,0.138l-3.729-1.64c-0.592-0.262-1.292-0.11-1.725,0.377c-1.804,2.029-3.151,4.35-4.008,6.896\tc-0.208,0.618,0.008,1.301,0.535,1.688l3.273,2.4C9.574,22.241,10,23.081,10,23.966s-0.426,1.725-1.138,2.247l-3.294,2.415\tc-0.525,0.386-0.742,1.065-0.537,1.684c0.848,2.548,2.189,4.872,3.987,6.909c0.433,0.489,1.133,0.644,1.728,0.38l3.709-1.631\tc0.808-0.356,1.748-0.305,2.516,0.138c0.766,0.442,1.28,1.23,1.377,2.109l0.446,4.072c0.071,0.648,0.553,1.176,1.191,1.307\tC21.299,43.864,22.649,44,24,44c1.318,0,2.648-0.133,3.953-0.395c0.642-0.129,1.125-0.657,1.196-1.308l0.443-4.046\tc0.097-0.88,0.611-1.668,1.379-2.11c0.766-0.441,1.705-0.493,2.515-0.138l3.729,1.64c0.594,0.263,1.292,0.111,1.725-0.377\tc1.804-2.029,3.151-4.35,4.008-6.896c0.208-0.618-0.008-1.301-0.535-1.688L39.139,26.282z M24,31c-3.866,0-7-3.134-7-7s3.134-7,7-7\ts7,3.134,7,7S27.866,31,24,31z\" /></svg>\n);\n\nconst Settings = props => <Icon component={ SettingsSvg } { ...props } />;\n\nexport default Settings;","import Icon from '@ant-design/icons';\n\nconst HamburgerSvg = () => (\n    <svg viewBox=\"0 0 100 80\" width=\"32\" height=\"32\">\n        <rect width=\"100\" height=\"20\"></rect>\n        <rect y=\"30\" width=\"100\" height=\"20\"></rect>\n        <rect y=\"60\" width=\"100\" height=\"20\"></rect>\n    </svg>\n);\n\nconst Hamburger = props => <Icon component={ HamburgerSvg } { ...props } />;\n\nexport default Hamburger;","import React from \"react\";\nimport Search from '../icons/Search';\nimport Settings from '../icons/Settings';\nimport Hamburger from '../icons/Hamburger';\nimport CustomLink from '../CustomLink';\n\nimport { Radio } from 'antd';\n\nimport './Navigation.scss';\n\nconst Navigation = (props) => {\n    return (\n        <Radio.Group className=\"navigation__container\" defaultValue={ props.checked } >\n\n            <CustomLink to='/lists'\n                        value=\"lists\"\n                        tag={ Radio }\n                        className=\"navigation__buttons\"\n            >\n                <Hamburger />\n            </CustomLink>\n\n            <span className=\"divition-line\"></span>\n\n            <CustomLink to='/film'\n                        value=\"search\"\n                        tag={ Radio }\n                        className=\"navigation__buttons\"\n            >\n                <Search className=\"search-icon_small\" />\n            </CustomLink>\n\n            <span className=\"divition-line\"></span>\n\n            <CustomLink to='/settings'\n                        value=\"settings\"\n                        tag={ Radio }\n                        className=\"navigation__buttons\"\n            >\n                <Settings />\n            </CustomLink>\n\n        </Radio.Group>\n    )\n}\n\nexport default Navigation;","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Image } from 'antd';\nimport Spinner from '../../components/Spinner';\nimport ErrorFilmCard from './ErrorFilmCard';\nimport FilmCardButton from '../../components/FilmCardButton/FilmCardButton';\nimport Star from '../../components/icons/Star';\nimport './FilmCard.scss';\nimport Navigation from '../../components/Navigation/Navigation';\n\nconst IMAGE_ENDPOINT = 'https://st.kp.yandex.net/images';\n\nconst FilmCard = ({ film, changeFilm, seenFilm, removeFilm, error }) => {\n    const cardEndRef = useRef(null);\n    \n    const handleScrollToBottom = useCallback(() => {\n        cardEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, []);\n\n    useEffect(() => {\n        handleScrollToBottom();\n    });\n\n    useEffect(() => {\n        handleScrollToBottom();\n    }, [film, handleScrollToBottom]);\n\n    const handleChangeFontSize = useCallback(() => {\n        if (film.name.length > 15 && film.name.length < 30) {\n            return '20px';\n        } else if (film.name.length >= 30) {\n            return '18px';\n        } else {\n            return '25px';\n        }\n    }, [film]);\n\n    const ageFormatted = film.age !== null && `, ${film.age}+`;\n\n    return (\n        error ? <ErrorFilmCard error={error}/> :\n        <div className=\"filmCard--wrapper theme\">\n            <div className=\"filmCard__poster\">\n                <img className=\"filmCard__poster__background\" alt=\"\"\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\n                />\n                <Image className=\"filmCard__poster__image\" alt={ film.name }\n                    preview={ { src: `${IMAGE_ENDPOINT}/film_big/${film.id}.jpg` } }\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\n                    placeholder={ <Spinner /> }\n                />\n            </div>\n            <div className=\"filmCard__infoBlock theme\">\n                <div className=\"filmCard__infoBlock--titleWrapper\">\n                    <h3 className=\"filmCard__infoBlock__title\" style={ { fontSize: handleChangeFontSize() } }>{ film.name }</h3>\n                    <p className=\"filmCard__infoBlock__rate\">\n                        <Star />\n                        { film.rate }\n                    </p>\n                </div>\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\n                    <p className=\"filmCard__infoBlock__secondTitle\">{ film.secondName }</p>\n                    <p className=\"filmCard__infoBlock__year\">{ film.year }г. ({ film.countries.join(', ') })</p>\n                </div>\n                <p className=\"filmCard__infoBlock__genre\">{ film.genres.join(', ') }<span>{ ageFormatted }</span></p>\n                <hr className=\"filmCard__infoBlock--underline\" />\n                <div className=\"filmCard__infoBlock--scrollableWrapper\">\n                    <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\n                    <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\n                        <p className=\"filmCard__infoBlock__description\">{ film.description }</p>\n                    </label>\n                </div>\n            </div>\n            <div className=\"filmCard__footer theme\">\n                <div className=\"filmCard__footer__buttonGroup\">\n                    <FilmCardButton eventAction={ seenFilm }>уже смотрел</FilmCardButton>\n                    <FilmCardButton eventAction={ removeFilm }>не предлагать</FilmCardButton>\n                    <FilmCardButton eventAction={ changeFilm }>в другой раз</FilmCardButton>\n                </div>\n                <div className=\"filmCard__footer__emptyBlock\" ref={ cardEndRef }></div>\n            </div>\n            <Navigation checked={ 'search' } />\n        </div>\n    )\n};\n\nFilmCard.propTypes = {\n    error: PropTypes.string,\n    film: PropTypes.object,\n    removeFilm: PropTypes.func,\n    seenFilm: PropTypes.func,\n    changeFilm: PropTypes.func\n};\n\nexport default FilmCard;","export const LOAD_FILMS = '@@film/LOAD_FILMS';\nexport const LOAD_FILMS_STARTED = '@@film/LOAD_FILMS_STARTED';\nexport const LOAD_FILMS_FAILURE = '@@film/LOAD_FILMS_FAILURE';\nexport const ADD_TO_HISTORY = '@@film/ADD_TO_HISTORY';\nexport const ADD_TO_BLACKLIST = '@@film/ADD_TO_BLACKLIST';\nexport const ADD_TO_ALREADY_SEEN = '@@film/ADD_TO_ALREADY_SEEN';\nexport const ADD_TO_FAVORITES = '@@film/ADD_TO_FAVORITES';\nexport const REMOVE_FROM_HISTORY = '@@film/REMOVE_FROM_HISTORY';\nexport const REMOVE_FROM_ALREADY_SEEN = '@@film/REMOVE_FROM_ALREADY_SEEN';\nexport const REMOVE_FROM_BLACKLIST = '@@film/REMOVE_FROM_BLACKLIST';\nexport const REMOVE_FROM_FAVORITES = '@@film/REMOVE_FROM_FAVORITES';\nexport const SELECT_FILM = '@@film/SELECT_FILM';\nexport const CLEAR_LISTS = '@@film/CLEAR_LISTS';\n\nexport const loadFilms = (films) => ({\n    type: LOAD_FILMS,\n    films\n});\n\nexport const loadFilmsStarted = () => ({\n    type: LOAD_FILMS_STARTED\n});\n\nexport const loadFilmsFailure = (error) => ({\n    type: LOAD_FILMS_FAILURE,\n    error\n});\n\nexport const selectFilm = (film) => ({\n    type: SELECT_FILM,\n    film\n});\n\nexport const addToHistory = (filmId) => ({\n    type: ADD_TO_HISTORY,\n    filmId\n});\n\nexport const addToBlacklist = (filmId) => ({\n    type: ADD_TO_BLACKLIST,\n    filmId\n});\n\nexport const addToAlreadySeen = (filmId) => ({\n    type: ADD_TO_ALREADY_SEEN,\n    filmId\n});\n\nexport const addToFavorites = (filmId) => ({\n    type: ADD_TO_FAVORITES,\n    filmId\n});\n\nexport const removeFromHistory = (filmId) => ({\n    type: REMOVE_FROM_HISTORY,\n    filmId\n});\n\nexport const removeFromAlreadySeen = (filmId) => ({\n    type: REMOVE_FROM_ALREADY_SEEN,\n    filmId\n});\n\nexport const removeFromBlacklist = (filmId) => ({\n    type: REMOVE_FROM_BLACKLIST,\n    filmId\n});\n\nexport const removeFromFavorites = (filmId) => ({\n    type: REMOVE_FROM_FAVORITES,\n    filmId\n});\n\nexport const clearLists = () => ({\n    type: CLEAR_LISTS\n});","import axios from 'axios';\nimport { loadFilms, loadFilmsStarted, loadFilmsFailure } from './filmActions';\nimport { selectFilm, addToHistory, addToBlacklist, addToAlreadySeen, addToFavorites, removeFromAlreadySeen, removeFromBlacklist, removeFromFavorites, removeFromHistory } from './filmActions';\n\n/**\n * Сохраняет список в local storage\n * \n * @param {string} listName - имя списка для сохранения.\n */\nexport const saveList = (listName) => {\n    return (dispatch, getState) => {\n        const { [listName]: list } = getState().filmReducer;\n        localStorage.setItem(listName, JSON.stringify(list));\n    }\n};\n\n/**\n * Добавляет фильм в список, затем сохраняет список в local storage\n * \n * @param {number} filmId - id добавляемого фильма.\n * @param {string} [listName=\"history\"] - имя списка для добавляемого фильма и сохранения.\n */\nexport const addToListAndSave = (filmId, listName = \"history\") => {\n    return (dispatch, getState) => {\n        switch (listName) {\n            case \"blacklist\":\n                dispatch(addToBlacklist(filmId));\n                break;\n            case \"alreadySeen\":\n                dispatch(addToAlreadySeen(filmId));\n                break;\n            case \"favorites\":\n                dispatch(addToFavorites(filmId));\n                break;\n            default:\n                dispatch(addToHistory(filmId));\n        }\n        dispatch(saveList(listName));\n    }\n};\n\n/**\n * Удаляет фильм из списка, затем сохраняет список в local storage\n * \n * @param {number} filmId - id удаляемого фильма.\n * @param {string} [listName=\"history\"] - имя списка для удаляемого фильма и сохранения.\n */\nexport const removeFromListAndSave = (filmId, listName = \"history\") => {\n    return (dispatch, getState) => {\n        switch (listName) {\n            case \"blacklist\":\n                dispatch(removeFromBlacklist(filmId));\n                break;\n            case \"alreadySeen\":\n                dispatch(removeFromAlreadySeen(filmId));\n                break;\n            case \"favorites\":\n                dispatch(removeFromFavorites(filmId));\n                break;\n            default:\n                dispatch(removeFromHistory(filmId));\n        }\n        dispatch(saveList(listName));\n    }\n};\n\n/**\n * \n * @param {number} filmId - id фильма.\n * @param {*} listName - имя списка для добавления/удаления фильма. По умолчанию - избранные фильмы.\n */\nexport const favoriteIconPush = (filmId, listName = \"favorites\") => {\n    return (dispatch, getState) => {\n        const { favorites } = getState().filmReducer;\n        let checkList = favorites.data.find(item => item.id === filmId);\n        if (!checkList) {\n            dispatch(addToListAndSave(filmId, listName));\n        } else {\n            dispatch(removeFromListAndSave(filmId, listName));\n        }\n    }\n};\n\n/**\n * Вычисляет случайный фильм отсутствующий в списках blacklist и alreadySeen, его добавляет в историю\n */\nexport const changeFilm = () => {\n    return (dispatch, getState) => {\n        const { films, blacklist, alreadySeen } = getState().filmReducer;\n        let film, randomIndex;\n        do {\n            randomIndex = ~~(Math.random() * films.length);\n            film = films[randomIndex];\n        } while (\n            blacklist.list[film.id] || alreadySeen.list[film.id]\n        )\n        dispatch(selectFilm(randomIndex));\n        dispatch(addToListAndSave(film.id));\n    }\n};\n\n/**\n * Загружает фильмы и запускает выбор одного из них\n */\nexport const fetchFilms = () => {\n    return dispatch => {\n        dispatch(loadFilmsStarted());\n\n        axios.get(\"./films.json\")\n            .then(response => {\n                dispatch(loadFilms(response.data));\n                dispatch(changeFilm());\n            })\n            .catch(err => {\n                dispatch(loadFilmsFailure(err.message));\n            });\n    }\n};","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\n\nimport Spinner from '../components/Spinner';\nimport FilmCard from '../pages/FilmCard';\nimport { addToListAndSave, changeFilm } from '../store/actions/complexFilmActions';\n\nconst FilmCardContainer = ({ film, addToListAndSave, changeFilm, error }) => {\n    const handleChangeFilm = useCallback(() => {\n        changeFilm();\n    }, [changeFilm]);\n\n    const handleMoveFilmToBlacklist = useCallback(() => {\n        addToListAndSave(film.id, \"blacklist\");\n        handleChangeFilm();\n    }, [film, addToListAndSave, handleChangeFilm]);\n\n    const handleMoveFilmToAlreadySeen = useCallback(() => {\n        addToListAndSave(film.id, \"alreadySeen\");\n        handleChangeFilm();\n    }, [film, addToListAndSave, handleChangeFilm]);\n\n    return (\n        !film ? <Spinner /> : <FilmCard error={error} film={film} changeFilm={handleChangeFilm} removeFilm={handleMoveFilmToBlacklist} seenFilm={handleMoveFilmToAlreadySeen} />\n    )\n};\n\nFilmCardContainer.propTypes = {\n    error: PropTypes.string,\n    film: PropTypes.object,\n    addToListAndSave: PropTypes.func,\n    changeFilm: PropTypes.func\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    error: filmReducer.error,\n    film: filmReducer.film,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToListAndSave, changeFilm }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmCardContainer);","export const RATINGS = { 5: 'от 5', 10: 'до 10' };\nexport const YEARS = { 1980: 'c 1980', 2021: 'по 2021' };\nexport const GENRES = [{value:\"Все\"},{value:\"документальный\"},{value:\"комедия\"},{value:\"короткометражка\"},{value:\"фэнтези\"},{value:\"мюзикл\"},{value:\"мелодрама\"},{value:\"мультфильм\"},{value:\"концерт\"},{value:\"музыка\"},{value:\"драма\"},{value:\"криминал\"},{value:\"фантастика\"},{value:\"биография\"},{value:\"ток-шоу\"},{value:\"боевик\"},{value:\"детский\"},{value:\"семейный\"},{value:\"история\"},{value:\"детектив\"},{value:\"игра\"},{value:\"военный\"},{value:\"приключения\"},{value:\"триллер\"},{value:\"реальное ТВ\"},{value:\"спорт\"},{value:\"ужасы\"},{value:\"аниме\"},{value:\"вестерн\"},{value:\"новости\"},{value:\"церемония\"},{value:\"фильм-нуар\"},{value:\"для взрослых\"}];\nexport const COUNTRIES = [{value:\"Все\"},{value:\"США\"},{value:\"Россия\"},{value:\"СССР\"},{value:\"Австралия\"},{value:\"Япония\"},{value:\"Великобритания\"},{value:\"Франция\"},{value:\"Корея Южная\"},{value:\"Нидерланды\"},{value:\"Индия\"},{value:\"Ирландия\"},{value:\"Канада\"},{value:\"Венгрия\"},{value:\"Италия\"},{value:\"Австрия\"},{value:\"Китай\"},{value:\"Германия\"},{value:\"Турция\"},{value:\"Украина\"},{value:\"Марокко\"},{value:\"Финляндия\"},{value:\"Испания\"},{value:\"Бельгия\"},{value:\"Германия (ФРГ)\"},{value:\"Новая Зеландия\"},{value:\"Польша\"},{value:\"Ботсвана\"},{value:\"Мальта\"},{value:\"Иран\"},{value:\"Швеция\"},{value:\"Армения\"},{value:\"Беларусь\"},{value:\"ЮАР\"},{value:\"Тайвань\"},{value:\"Мексика\"},{value:\"Аргентина\"},{value:\"Швейцария\"},{value:\"Колумбия\"},{value:\"Исландия\"},{value:\"Казахстан\"},{value:\"Индонезия\"},{value:\"Сингапур\"},{value:\"Чехословакия\"},{value:\"Узбекистан\"},{value:\"Норвегия\"},{value:\"Румыния\"},{value:\"Гонконг\"},{value:\"Люксембург\"},{value:\"Бразилия\"},{value:\"Дания\"},{value:\"Сербия и Черногория\"},{value:\"Грузия\"},{value:\"Филиппины\"},{value:\"Югославия\"},{value:\"Чехия\"},{value:\"ОАЭ\"},{value:\"Египет\"},{value:\"Израиль\"},{value:\"Болгария\"},{value:\"Ливан\"},{value:\"Тунис\"},{value:\"Венесуэла\"},{value:\"Монголия\"},{value:\"Югославия (ФР)\"},{value:\"Германия (ГДР)\"},{value:\"Азербайджан\"},{value:\"Куба\"},{value:\"Словакия\"},{value:\"Греция\"},{value:\"Лихтенштейн\"},{value:\"Эстония\"},{value:\"Молдова\"},{value:\"Хорватия\"},{value:\"Российская империя\"},{value:\"Перу\"},{value:\"Таиланд\"},{value:\"Алжир\"},{value:\"Киргизия\"},{value:\"Багамы\"},{value:\"Андорра\"},{value:\"Палестина\"},{value:\"Сербия\"},{value:\"Северная Македония\"},{value:\"Латвия\"},{value:\"Словения\"},{value:\"Французская Полинезия\"},{value:\"Шри-Ланка\"},{value:\"Чили\"},{value:\"Бангладеш\"},{value:\"Камбоджа\"},{value:\"Португалия\"},{value:\"Пуэрто Рико\"},{value:\"Танзания\"},{value:\"Босния и Герцеговина\"},{value:\"Уругвай\"},{value:\"Ямайка\"},{value:\"Саудовская Аравия\"},{value:\"Вьетнам\"},{value:\"Косово\"},{value:\"Руанда\"},{value:\"Сирия\"},{value:\"Намибия\"},{value:\"Македония\"},{value:\"Литва\"},{value:\"Конго\"},{value:\"Кения\"},{value:\"Ирак\"},{value:\"Бутан\"},{value:\"Кувейт\"},{value:\"Ливия\"},{value:\"Монако\"},{value:\"Малайзия\"},{value:\"Корея Северная\"},{value:\"Афганистан\"},{value:\"Таджикистан\"},{value:\"Катар\"},{value:\"Ватикан\"},{value:\"Кипр\"},{value:\"Непал\"},{value:\"Сальвадор\"},{value:\"Малави\"},{value:\"Папуа - Новая Гвинея\"},{value:\"Гана\"},{value:\"Гваделупа\"},{value:\"Уганда\"},{value:\"Доминикана\"},{value:\"Пакистан\"},{value:\"Мадагаскар\"},{value:\"Бахрейн\"},{value:\"Замбия\"},{value:\"Эквадор\"},{value:\"Каймановы острова\"},{value:\"Макао\"},{value:\"Американское Самоа\"},{value:\"Иордания\"},{value:\"Белиз\"},{value:\"Лаос\"},{value:\"Гватемала\"},{value:\"Эфиопия\"},{value:\"Буркина-Фасо\"},{value:\"Сенегал\"},{value:\"Йемен\"},{value:\"Бермуды\"},{value:\"Панама\"},{value:\"Албания\"},{value:\"Боливия\"},{value:\"Камерун\"},{value:\"Аруба\"},{value:\"Нигерия\"},{value:\"Черногория\"},{value:\"Туркменистан\"},{value:\"Антильские Острова\"},{value:\"Сомали\"},{value:\"Судан\"},{value:\"Новая Каледония\"},{value:\"Либерия\"},{value:\"Босния\"},{value:\"Берег Слоновой кости\"},{value:\"Вануату\"},{value:\"Парагвай\"},{value:\"Зимбабве\"},{value:\"Мавритания\"},{value:\"Мали\"},{value:\"Фиджи\"},{value:\"Чад\"},{value:\"Тринидад и Тобаго\"},{value:\"Гренландия\"},{value:\"Маврикий\"},{value:\"Ангола\"},{value:\"Коста-Рика\"},{value:\"Виргинские Острова (Великобритания)\"},{value:\"Никарагуа\"},{value:\"Мозамбик\"},{value:\"Гаити\"},{value:\"Мальдивы\"},{value:\"Мартиника\"},{value:\"Гибралтар\"},{value:\"Гвинея\"},{value:\"Барбадос\"},{value:\"Реюньон\"},{value:\"Заир\"},{value:\"Гондурас\"},{value:\"Антарктида\"},{value:\"Конго (ДРК)\"},{value:\"Французская Гвиана\"},{value:\"Мьянма\"},{value:\"Бирма\"}];    ","export const CHANGE_THEME = '@@theme/CHANGE_THEME'\n\nexport const changeTheme = (isLightTheme) => ({\n        type: CHANGE_THEME,\n        isLightTheme: !isLightTheme\n})","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Switch } from 'antd';\nimport { changeTheme } from '../../store/actions/themeAction';\n\nconst ThemeSwitch = ({ isLightTheme }) => {\n  const dispatch = useDispatch();\n\n  const onChange = (isLightTheme, checked) => {\n    document.body.classList.toggle('dark', isLightTheme, checked);\n    dispatch(changeTheme(isLightTheme));\n  }\n\n  return (\n      <Switch \n        onChange={onChange} \n        checked={!isLightTheme && true}\n      />\n    );\n};\n\nThemeSwitch.propTypes = {\n  isLightTheme: PropTypes.bool\n}\n\nconst mapStateToProps = ({ themeReducer }) => ({\n    isLightTheme: themeReducer.isLightTheme,\n});\n\nexport default connect(mapStateToProps, { changeTheme })(ThemeSwitch);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\n\nimport { clearLists } from '../../store/actions/filmActions';\n\nimport { Typography, Button, Slider, Select } from 'antd';\nimport Navigation from '../../components/Navigation';\nimport { RATINGS, YEARS, GENRES, COUNTRIES } from './config';\nimport './Settings.scss';\nimport ThemeSwitch from '../../components/ThemeSwitch/ThemeSwitch';\nimport { Link } from 'react-router-dom';\n\nconst { Title, Text } = Typography;\n\nconst Settings = (props) => {\n    const [selectedGenres, setSelectedGenres] = React.useState(['боевик','комедия']);\n    const [selectedCountries, setSelectedCountries] = React.useState(['Россия','США']);\n\n    const handleSelect = (value, type) => {\n        if (value === \"Все\") {\n            (type === \"genres\")\n                ? setSelectedGenres(GENRES.map(genre => genre.value))\n                : setSelectedCountries(COUNTRIES.map(country => country.value));\n        }\n    }\n\n    const handleDeSelect = (value, type) => {\n        if (value === \"Все\") {\n            (type === \"genres\") ? setSelectedGenres([]) : setSelectedCountries([])\n        }\n    }\n\n    const handleClearSettings = () => {\n        props.clearLists();\n        localStorage.removeItem('blacklist');\n        localStorage.removeItem('alreadySeen');\n        localStorage.removeItem('history');\n        localStorage.removeItem('favorites');\n    }\n\n    return (\n        <div className=\"settings--wrapper theme\">\n            <div className=\"settings__header theme\">\n                <div className=\"settings__header--title\" level={2}>Настройки</div>\n            </div>\n            <div className=\"settings__content\">\n                <Link type=\"secondary\" className=\"settings__content--login\" to='/login'>\n                    <Button size=\"large\">Вход / Регистрация</Button>\n                </Link>\n\n                <div className=\"settings__content--row\">\n                    <Text className=\"theme\">Темная версия оформления</Text>\n                    <ThemeSwitch/>\n                </div>\n\n                <Title level={3}>Настройки поиска</Title>\n\n                <div className=\"settings__content--row theme\">\n                    <Text className=\"theme\">Рейтинг</Text>\n                    <Slider className=\"settings__content--slider\" range\n                            marks={RATINGS} min={5} max={10} step={0.5} defaultValue={[7, 9]}\n                    />\n                </div>\n\n                <div className=\"settings__content--row\">\n                    <Text className=\"theme\">Годы</Text>\n                    <Slider className=\"settings__content--slider\" range\n                            marks={YEARS} min={1980} max={2021} defaultValue={[1990, 2020]}\n                    />\n                </div>\n\n                <div className=\"settings__content--row\">\n                    <Text className=\"theme\">Жанры</Text>\n                    <Select className=\"settings__content--select\"\n                            mode=\"multiple\"\n                            showArrow\n                            value={selectedGenres}\n                            onSelect={(val) => {handleSelect(val, \"genres\")}}\n                            onDeselect={(val) => {handleDeSelect(val, \"genres\")}}\n                            onChange={setSelectedGenres}\n                            options={GENRES}\n                            maxTagCount={3}\n                    />\n                </div>\n\n                <div className=\"settings__content--row\">\n                    <Text className=\"theme\">Страны</Text>\n                    <Select className=\"settings__content--select\"\n                            mode=\"multiple\"\n                            showArrow\n                            value={selectedCountries}\n                            onSelect={(val) => {handleSelect(val, \"countries\")}}\n                            onDeselect={(val) => {handleDeSelect(val, \"countries\")}}\n                            onChange={setSelectedCountries}\n                            options={COUNTRIES}\n                            maxTagCount={4}\n                    />\n                </div>\n\n                <Button type=\"secondary\" size=\"large\" className=\"settings__content--reset\" onClick={handleClearSettings}>\n                    Сбросить настройки\n                </Button>\n\n            </div>\n            <Navigation checked={ 'settings' } />\n        </div>\n    )\n};\n\nSettings.propTypes = {\n    clearLists: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ clearLists }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Settings);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ListLink.scss';\n\nconst ListLink = (props) => {\n    return (\n        <div className=\"listLink--wrapper\">\n            <p className=\"listLink__title\">{props.children}</p>\n            <p className=\"listLink__length\">{props.listLength}</p>\n        </div>\n    )\n};\n\nListLink.propTypes = {\n    listLength: PropTypes.number,\n    children: PropTypes.string\n}\n\nexport default ListLink;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { Link } from 'react-router-dom';\n\nimport './Lists.scss';\nimport Navigation from '../../components/Navigation';\nimport ListLink from '../../components/ListLink';\n\nconst Lists = ({ blacklist, alreadySeen, history, favorites }) => {\n    return (\n        <div className=\"lists--wrapper theme\">\n            <div className=\"lists__header theme\">Списки фильмов</div>\n            <Link className=\"lists__link--color\" to=\"/history\"><ListLink listLength={history.data.length}>История предложений</ListLink></Link>\n            <Link className=\"lists__link--color\" to=\"/seenList\"><ListLink listLength={alreadySeen.data.length}>Просмотренные фильмы</ListLink></Link>\n            <Link className=\"lists__link--color\" to=\"/blacklist\"><ListLink listLength={blacklist.data.length}>Отклоненные фильмы</ListLink></Link>\n            <Link className=\"lists__link--color\" to=\"/favorites\"><ListLink listLength={favorites.data.length}>Избранные</ListLink></Link>\n            <Navigation checked={'lists'} />\n        </div>\n    )\n};\n\nLists.propTypes = {\n    history: PropTypes.object,\n    favorites: PropTypes.object,\n    blacklist: PropTypes.object,\n    alreadySeen: PropTypes.object\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    history: filmReducer.history,\n    favorites: filmReducer.favorites,\n    blacklist: filmReducer.blacklist,\n    alreadySeen: filmReducer.alreadySeen\n});\n\nexport default connect(mapStateToProps)(Lists);","import React from 'react';\n\nconst Bookmark = ({ status }) => {\n    return (\n        <svg version=\"1.1\" width=\"20\" height=\"20\"\n            viewBox=\"0 0 423.936 423.936\" fill={ status ? \"#DA952D\" : \"\" }>\n            <path d=\"M327.68,0H96.256c-22.528,0-40.96,18.432-40.96,40.96v357.376c0,9.728,5.632,18.944,14.336,23.04\n\t\t\tc9.216,4.096,19.456,3.072,27.136-3.072l0.512-0.512l114.688-96.768l114.688,96.768l0.512,0.512\n\t\t\tc4.608,3.584,10.24,5.632,15.872,5.632c3.584,0,7.68-1.024,11.264-3.072c8.704-4.096,14.336-13.312,14.336-23.04V40.96\n\t\t\tC368.64,18.432,350.208,0,327.68,0z\"/>\n        </svg>\n    );\n};\n\nexport default Bookmark;","import Icon from '@ant-design/icons';\n\nconst TrashBinSvg = () => (\n    <svg width=\"20\" height=\"20\" viewBox=\"-57 0 512 512\"  ><path d=\"m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0\" /><path d=\"m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0\" /><path d=\"m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0\" /></svg>\n);\n\nconst TrashBin = props => <Icon component={TrashBinSvg} {...props} />;\n\nexport default TrashBin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Star from '../icons/Star';\nimport Bookmark from '../icons/Bookmark';\nimport TrashBin from '../icons/TrashBin';\n\nimport './ListItem.scss';\n\nconst ListItem = ({ removeFromList, addToFavorites, name, secondName, year, rate, age, genre, status }) => {\n    return (\n        <div className=\"list-item\">\n            <div className=\"list-item__about\">\n                <p className=\"list-item__name theme\">{ name }<span className=\"list-item__year\"> ({ year })</span></p>\n                <p className=\"list-item__second-name\">{ secondName }</p>\n                <p className=\"list-item__genre\">{ genre }<span className=\"list-item__age\">{ age && `${age}+` }</span></p>\n            </div>\n            <div className=\"list-item__actions-container\">\n                <div className=\"list-item__rating\">\n                    <Star />\n                    <div className=\"list-item__rate\">{ rate }</div>\n                </div>\n                <div className=\"list-item__buttons\">\n                    {!!addToFavorites && <button className=\"favorite\" onClick={ addToFavorites }><Bookmark status={ status } /></button>}\n                    <button onClick={ removeFromList }><TrashBin /></button>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nListItem.propTypes = {\n    removeFromList: PropTypes.func,\n    addToFavorites: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(undefined)]),\n    name: PropTypes.string,\n    secondName: PropTypes.string,\n    year: PropTypes.number,\n    rate: PropTypes.number,\n    age: PropTypes.number,\n    genre: PropTypes.array,\n    status: PropTypes.oneOfType([PropTypes.bool, PropTypes.instanceOf(undefined)]),\n};\n\nexport default ListItem; ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\n\nimport ListItem from '../../components/ListItem';\nimport Navigation from '../../components/Navigation';\nimport './SeenList.scss';\n\n\nconst SeenList = ({ films, favorites, alreadySeen, favoriteIconPush, removeFromListAndSave }) => {\n    let list = films.length && alreadySeen.data.map(item => {\n        let film = films.find(film => film.id === item.id);\n        const handleAddToFavorites = () => {\n            favoriteIconPush(film.id);\n        };\n        const handleRemoveFromList = () => {\n            removeFromListAndSave(film.id, \"alreadySeen\");\n        };\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\n    }).reverse();\n    return (\n        <div className=\"seenList--wrapper\">\n            <div className=\"seenList__header theme\">Просмотренные</div>\n            <div className=\"seenList__list\">\n                { list?.length ? list : (<div className=\"seenList__placeholder\"/>) }\n            </div>\n            <div className=\"seenList__emptyBlock\"></div>\n            <Navigation checked={'lists'} />\n        </div>\n    )\n};\n\nSeenList.propTypes = {\n    alreadySeen: PropTypes.object,\n    favorites: PropTypes.object,\n    films: PropTypes.array,\n    favoriteIconPush: PropTypes.func,\n    removeFromListAndSave: PropTypes.func\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    films: filmReducer.films,\n    favorites: filmReducer.favorites,\n    alreadySeen: filmReducer.alreadySeen\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SeenList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\nimport { removeFromListAndSave, favoriteIconPush } from '../../store/actions/complexFilmActions';\n\nimport ListItem from '../../components/ListItem';\nimport Navigation from '../../components/Navigation';\nimport './History.scss';\n\n\nconst History = ({ films, favorites, history, favoriteIconPush, removeFromListAndSave }) => {\n    let list = films.length && history.data.map(item => {\n        let film = films.find(film => film.id === item.id);\n        const handleAddToFavorites = () => {\n            favoriteIconPush(film.id);\n        };\n        const handleRemoveFromList = () => {\n            removeFromListAndSave(film.id);\n        };\n        return <ListItem key={`${film.id}${item.timestamp}`} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\n    }).reverse();\n    return (\n        <div className=\"history--wrapper\">\n            <div className=\"history__header theme\">История предложений</div>\n            <div className=\"history__list\">\n                { list?.length ? list : (<div className=\"history__placeholder\"/>) }\n            </div>\n            <div className=\"history__emptyBlock\"></div>\n            <Navigation checked={'lists'} />\n        </div>\n    )\n};\n\nHistory.propTypes = {\n    history: PropTypes.object,\n    favorites: PropTypes.object,\n    films: PropTypes.array,\n    favoriteIconPush: PropTypes.func,\n    removeFromListAndSave: PropTypes.func,\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    films: filmReducer.films,\n    history: filmReducer.history,\n    favorites: filmReducer.favorites\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\n\nimport ListItem from '../../components/ListItem';\nimport Navigation from '../../components/Navigation';\nimport './Blacklist.scss';\n\n\nconst Blacklist = ({ films, favorites, blacklist, favoriteIconPush, removeFromListAndSave }) => {\n    let list = films.length && blacklist.data.map(item => {\n        let film = films.find(film => film.id === item.id);\n        const handleAddToFavorites = () => {\n            favoriteIconPush(film.id);\n        };\n        const handleRemoveFromList = () => {\n            removeFromListAndSave(film.id, \"blacklist\");\n        };\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\n    }).reverse();\n    return (\n        <div className=\"blacklist--wrapper\">\n            <div className=\"blacklist__header theme\">Отклоненные</div>\n            <div className=\"blacklist__list\"> \n            { list?.length ? list : (<div className=\"blacklist__placeholder\"/>) }\n            </div>\n            <div className=\"blacklist__emptyBlock\"></div>\n            <Navigation checked={'lists'} />\n        </div>\n    )\n};\n\nBlacklist.propTypes = {\n    blacklist: PropTypes.object,\n    favorites: PropTypes.object,\n    films: PropTypes.array,\n    favoriteIconPush: PropTypes.func,\n    removeFromListAndSave: PropTypes.func\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    films: filmReducer.films,\n    favorites: filmReducer.favorites,\n    blacklist: filmReducer.blacklist\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blacklist);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\nimport { removeFromListAndSave } from '../../store/actions/complexFilmActions';\n\nimport ListItem from '../../components/ListItem';\nimport Navigation from '../../components/Navigation';\nimport './Favorites.scss';\n\n\nconst Favorites = ({ films, favorites, removeFromListAndSave }) => {\n    let list = films.length && favorites.data.map(item => {\n        let film = films.find(film => film.id === item.id);\n        const handleRemoveFromList = () => {\n            removeFromListAndSave(film.id, \"favorites\");\n        };\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} removeFromList={handleRemoveFromList} />\n    }).reverse();\n    return (\n        <div className=\"favorites--wrapper\">\n            <div className=\"favorites__header theme\">Избранные</div>\n            <div className=\"favorites__list\">\n                {list?.length ? list : (<div className=\"favorites__placeholder\" />)}\n            </div>\n            <div className=\"favorites__emptyBlock\"></div>\n            <Navigation checked={'lists'} />\n        </div>\n    )\n};\n\nFavorites.propTypes = {\n    favorites: PropTypes.object,\n    films: PropTypes.array,\n    removeFromListAndSave: PropTypes.func\n};\n\nconst mapStateToProps = ({ filmReducer }) => ({\n    films: filmReducer.films,\n    favorites: filmReducer.favorites\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromListAndSave }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Home from \"../pages/Home/Home\"\nimport LoginForm from '../pages/LoginPage';\nimport RegistrationForm from \"../pages/RegistrationPage\";\nimport FilmCardContainer from './FilmCardContainer';\nimport Settings from '../pages/Settings';\nimport Lists from '../pages/Lists';\nimport SeenList from '../containers/SeenList';\nimport History from '../containers/History';\nimport Blacklist from '../containers/Blacklist';\nimport Favorites from '../containers/Favorites';\n\nconst Router = (props) => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            <Route path=\"/login\" component={ LoginForm } />\n            <Route path=\"/registration\" component={ RegistrationForm } />\n            <Route path=\"/film\" component={ FilmCardContainer } />\n            <Route path=\"/settings\" component={ Settings } />\n            <Route path=\"/lists\" component={ Lists } />\n            <Route path=\"/history\" component={ History } />\n            <Route path=\"/seenList\" component={ SeenList } />\n            <Route path=\"/blacklist\" component={ Blacklist } />\n            <Route path=\"/favorites\" component={ Favorites } />\n        </Switch>\n    );\n};\n\nexport default Router;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport { bindActionCreators } from 'redux';\n\nimport Router from './containers/Router';\nimport { fetchFilms } from './store/actions/complexFilmActions';\n\nconst App = ({ fetchFilms }) => {\n  useEffect(() => {\n    fetchFilms();\n  });\n\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  fetchFilms: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchFilms }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(App);\n","import update from 'react-addons-update';\nimport { ADD_TO_HISTORY, ADD_TO_ALREADY_SEEN, ADD_TO_BLACKLIST, LOAD_FILMS, SELECT_FILM, LOAD_FILMS_STARTED, LOAD_FILMS_FAILURE, CLEAR_LISTS, ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, REMOVE_FROM_BLACKLIST, REMOVE_FROM_ALREADY_SEEN, REMOVE_FROM_HISTORY } from '../actions/filmActions';\n\nconst prepareList = (listName) => localStorage.getItem(listName) ? JSON.parse(localStorage.getItem(listName)) : { data: [], list: {} }\n\nconst initStore = {\n    films: [],\n    film: null,\n    history: prepareList('history'),\n    blacklist: prepareList('blacklist'),\n    alreadySeen: prepareList('alreadySeen'),\n    temporary: prepareList('temporary'),\n    favorites: prepareList('favorites'),\n    isLoading: false,\n    error: null\n}\n\nexport default function filmReducer(store = initStore, action) {\n    switch (action.type) {\n        case LOAD_FILMS_STARTED: {\n            return update(store, {\n                isLoading: {\n                    $set: true\n                }\n            });\n        }\n        case LOAD_FILMS_FAILURE: {\n            return update(store, {\n                isLoading: {\n                    $set: false\n                },\n                error: {\n                    $set: action.error\n                }\n            });\n        }\n        case LOAD_FILMS: {\n            return update(store, {\n                films: {\n                    $set: [...action.films]\n                },\n                error: {\n                    $set: null\n                }\n            });\n        }\n        case SELECT_FILM: {\n            return update(store, {\n                film: {\n                    $set: { ...store.films[action.film] }\n                },\n                isLoading: {\n                    $set: false\n                },\n                error: {\n                    $set: null\n                }\n            });\n        }\n        case ADD_TO_HISTORY: {\n            return update(store, {\n                history: {\n                    $merge: {\n                        ...store.history,\n                        data: [\n                            ...store.history.data,\n                            {\n                                id: action.filmId,\n                                timestamp: Date.now(),\n                                status: 'ADDED',\n                            }\n                        ],\n                        list: {\n                            ...store.history.list,\n                            [action.filmId]: true\n                        }\n                    }\n                }\n            });\n        }\n        case ADD_TO_BLACKLIST: {\n            return update(store, {\n                blacklist: {\n                    $merge: {\n                        ...store.blacklist,\n                        data: [\n                            ...store.blacklist.data,\n                            {\n                                id: action.filmId,\n                                timestamp: Date.now(),\n                                status: 'ADDED',\n                            }\n                        ],\n                        list: {\n                            ...store.blacklist.list,\n                            [action.filmId]: true\n                        }\n                    }\n                }\n            });\n        }\n        case ADD_TO_ALREADY_SEEN: {\n            return update(store, {\n                alreadySeen: {\n                    $merge: {\n                        ...store.alreadySeen,\n                        data: [\n                            ...store.alreadySeen.data,\n                            {\n                                id: action.filmId,\n                                timestamp: Date.now(),\n                                status: 'ADDED',\n                            }\n                        ],\n                        list: {\n                            ...store.alreadySeen.list,\n                            [action.filmId]: true\n                        }\n                    }\n                }\n            });\n        }\n        case ADD_TO_FAVORITES: {\n            return update(store, {\n                favorites: {\n                    $merge: {\n                        ...store.favorites,\n                        data: [\n                            ...store.favorites.data,\n                            {\n                                id: action.filmId,\n                                timestamp: Date.now(),\n                                status: 'ADDED',\n                            }\n                        ],\n                        list: {\n                            ...store.favorites.list,\n                            [action.filmId]: true\n                        }\n                    }\n                }\n            });\n        }\n        case REMOVE_FROM_HISTORY: {\n            let deleteFilm = store.history.data.find(film => film.id === action.filmId);\n            store.history.data.splice(store.history.data.indexOf(deleteFilm), 1);\n            delete store.history.list[action.filmId];\n            return update(store, {\n                history: {\n                    $set: {...store.history}\n                }\n            });\n        }\n        case REMOVE_FROM_ALREADY_SEEN: {\n            let deleteFilm = store.alreadySeen.data.find(film => film.id === action.filmId);\n            store.alreadySeen.data.splice(store.alreadySeen.data.indexOf(deleteFilm), 1);\n            delete store.alreadySeen.list[action.filmId];\n            return update(store, {\n                alreadySeen: {\n                    $set: {...store.alreadySeen}\n                }\n            });\n        }\n        case REMOVE_FROM_BLACKLIST: {\n            let deleteFilm = store.blacklist.data.find(film => film.id === action.filmId);\n            store.blacklist.data.splice(store.blacklist.data.indexOf(deleteFilm), 1);\n            delete store.blacklist.list[action.filmId];\n            return update(store, {\n                blacklist: {\n                    $set: {...store.blacklist}\n                }\n            });\n        }\n        case REMOVE_FROM_FAVORITES: {\n            let deleteFilm = store.favorites.data.find(film => film.id === action.filmId);\n            store.favorites.data.splice(store.favorites.data.indexOf(deleteFilm), 1);\n            delete store.favorites.list[action.filmId];\n            return update(store, {\n                favorites: {\n                    $set: {...store.favorites}\n                }\n            });\n        }\n        case CLEAR_LISTS: {\n            return update(store, {\n                history: {\n                    $set: {\n                        data: [],\n                        list: {}\n                    }\n                },\n                favorites: {\n                    $set: {\n                        data: [],\n                        list: {}\n                    }\n                },\n                alreadySeen: {\n                    $set: {\n                        data: [],\n                        list: {}\n                    }\n                },\n                blacklist: {\n                    $set: {\n                        data: [],\n                        list: {}\n                    }\n                }\n            });\n        }\n        default:\n            return store;\n    }\n}\n","import update from 'react-addons-update';\nimport { CHANGE_THEME } from \"../actions/themeAction\";\n\nconst initStore = {\n    isLightTheme: true\n}\n\nexport default function themeReducer(store = initStore, action) {\n    switch (action.type) {\n        case CHANGE_THEME: \n        return update(store, {\n            isLightTheme: {\n                $set: action.isLightTheme\n            }\n        })\n        default: return store;\n    }\n}","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport filmReducer from './filmReducer';\nimport themeReducer from './themeReducer';\n\n// eslint-disable-next-line\nexport default history => combineReducers({\n    router: connectRouter(history),\n    filmReducer,\n    themeReducer,\n});","import filmMiddleware from './filmMiddleware';\n\n// eslint-disable-next-line\nexport default [\n    filmMiddleware,\n];","// eslint-disable-next-line\nexport default store => next => action => {\n    return next(action);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\n\nimport RootReducers from './reducers';\nimport middlewares from './middlewares';\n\nexport const history = createBrowserHistory();\n\n// тернарник внутри compose не сработает\nconst composer = window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\n    window.__REDUX_DEVTOOLS_EXTENSION__(),\n) : compose(\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\n);\n\nexport const store = createStore(\n    RootReducers(history),\n    composer,\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./App\";\nimport { store, history } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}