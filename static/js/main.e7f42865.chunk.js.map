{"version":3,"sources":["reportWebVitals.js","components/icons/Search.jsx","pages/Home/Home.jsx","components/CustomLink.jsx","pages/LoginPage/LoginPage.jsx","pages/RegistrationPage/RegistrationPage.jsx","components/Spinner/Spinner.jsx","pages/FilmCard/ErrorFilmCard.jsx","components/FilmCardButton/FilmCardButton.jsx","components/icons/Star.jsx","components/icons/Bookmark.jsx","components/icons/Kp.jsx","components/icons/Settings.jsx","components/icons/Hamburger.jsx","components/Navigation/Navigation.jsx","pages/FilmCard/FilmCard.jsx","store/actions/filmActions.js","store/actions/complexFilmActions.js","containers/FilmCardContainer.jsx","pages/Settings/config.js","pages/Settings/Settings.jsx","components/ListLink/ListLink.jsx","pages/Lists/Lists.jsx","components/icons/TrashBin.jsx","components/ListItem/ListItem.jsx","containers/Lists/Blacklist.jsx","containers/Lists/Favorites.jsx","containers/Lists/History.jsx","containers/Lists/SeenList.jsx","containers/Lists/Temporary.jsx","containers/Router.jsx","App.jsx","store/reducers/filmReducer.js","store/reducers/index.js","store/middlewares/index.js","store/middlewares/filmMiddleware.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchSvg","version","x","y","viewBox","width","height","d","Search","props","Icon","component","Home","className","enter","e","index","rotate","opacity","scale","type","duration","to","CustomLink","history","onClick","Tag","tag","rest","event","push","defaultProps","withRouter","LoginForm","name","initialValues","remember","onFinish","values","alert","console","log","level","Item","rules","required","message","placeholder","Password","noStyle","valuePropName","htmlType","Button","RegistrationPage","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Spinner","indicator","LoadingOutlined","spin","ErrorFilmCard","error","id","htmlFor","localStorage","removeItem","window","location","replace","href","FilmCardButton","eventAction","children","Star","xmlns","fill","Bookmark","status","KpSvg","Kp","SettingsSvg","Settings","HamburgerSvg","Hamburger","Navigation","Group","defaultValue","checked","Radio","IMAGE_ENDPOINT","FilmCard","film","addToTemporary","seenFilm","removeFilm","notify","removeNotification","addToFavorites","cardEndRef","useRef","handleScrollToBottom","useCallback","current","scrollIntoView","behavior","useEffect","description","notification","handleChangeFontSize","length","ageFormatted","age","alt","src","preview","style","fontSize","rate","secondName","year","countries","join","genres","open","ref","LOAD_FILMS","LOAD_FILMS_STARTED","LOAD_FILMS_FAILURE","ADD_TO_HISTORY","ADD_TO_BLACKLIST","ADD_TO_TEMPORARY","ADD_TO_ALREADY_SEEN","ADD_TO_FAVORITES","REMOVE_FROM_HISTORY","REMOVE_FROM_ALREADY_SEEN","REMOVE_FROM_BLACKLIST","REMOVE_FROM_TEMPORARY","REMOVE_FROM_FAVORITES","SET_SETTINGS","CLEAR_SETTINGS","SHOW_NOTIFICATION","REMOVE_NOTIFICATION","SELECT_FILM","CLEAR_LISTS","loadFilmsFailure","selectFilm","addToHistory","filmId","addToBlacklist","addToAlreadySeen","removeFromHistory","removeFromAlreadySeen","removeFromBlacklist","removeFromTemporary","removeFromFavorites","clearLists","clearSettings","showNotification","notifyType","saveList","listName","dispatch","getState","list","filmReducer","setItem","JSON","stringify","noFilmsNotification","count","setSettingsAndSave","settings","setSettings","addToListAndSave","removeFromListAndSave","favoriteIconPush","changeFilm","randomIndex","films","blacklist","alreadySeen","temporary","filters","types","ratings","years","typesFilter","ratingsFilter","yearsFilter","genresFilter","some","genre","includes","countriesFilter","country","blacklistFilter","alreadySeenFilter","temporaryFilter","noCurrentFilter","filteredFilms","filter","every","appendFilters","sort","a","b","kpOrder","data","historyLast","reverse","findIndex","elem","Math","random","fetchFilms","axios","get","response","catch","err","connect","favorites","bindActionCreators","handleChangeFilm","handleAddToFavorites","handleMoveFilmToBlacklist","handleMoveFilmToAlreadySeen","handleMoveFilmToTemporary","TYPES","label","RATINGS","5","10","YEARS","1980","2021","GENRES","COUNTRIES","Title","Typography","Text","dark","handleSelect","map","handleDeSelect","handleClearSettings","size","onChange","val","mode","showArrow","onDeselect","options","range","marks","min","max","step","onSelect","maxTagCount","ListLink","listLength","handleClearButton","forEach","TrashBinSvg","TrashBin","ListItem","removeFromList","item","find","timestamp","Router","exact","path","RegistrationForm","FilmCardContainer","Lists","History","SeenList","Blacklist","Temporary","Favorites","document","body","classList","toggle","prepareList","getItem","parse","prepareSettings","initStore","isLoading","store","action","update","$set","$merge","Date","now","deleteFilm","splice","indexOf","next","createBrowserHistory","composer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","thunk","middlewares","createStore","combineReducers","router","connectRouter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7f42865.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Icon from '@ant-design/icons';\r\n\r\nconst SearchSvg = () => (\r\n    <svg version=\"1.1\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 37.166 37.166\" width=\"1em\" height=\"1em\">\r\n        <path d=\"M35.829,32.045l-6.833-6.833c-0.513-0.513-1.167-0.788-1.836-0.853c2.06-2.567,3.298-5.819,3.298-9.359\r\n\tc0-8.271-6.729-15-15-15c-8.271,0-15,6.729-15,15c0,8.271,6.729,15,15,15c3.121,0,6.021-0.96,8.424-2.598\r\n\tc0.018,0.744,0.305,1.482,0.872,2.052l6.833,6.833c0.585,0.586,1.354,0.879,2.121,0.879s1.536-0.293,2.121-0.879\r\n\tC37.001,35.116,37.001,33.217,35.829,32.045z M15.458,25c-5.514,0-10-4.484-10-10c0-5.514,4.486-10,10-10c5.514,0,10,4.486,10,10\r\n\tC25.458,20.516,20.972,25,15.458,25z\"/>\r\n    </svg>\r\n);\r\n\r\nconst Search = props => <Icon component={ SearchSvg } { ...props } />;\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Texty from 'rc-texty';\r\nimport 'rc-texty/assets/index.css';\r\n\r\nimport Search from '../../components/icons/Search';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = (props) => {\r\n  const anim = (e) => {\r\n    switch (e.index) {\r\n      case 0:\r\n        return {\r\n          rotate: 90,\r\n          opacity: 0,\r\n          y: -100,\r\n        };\r\n      case 1:\r\n        return {\r\n          y: -60,\r\n          x: -15,\r\n          opacity: 0,\r\n        };\r\n      case 2:\r\n        return {\r\n          y: -100,\r\n          x: 60,\r\n          opacity: 0,\r\n        };\r\n      case 3:\r\n        return {\r\n          y: 100,\r\n          opacity: 0,\r\n        };\r\n      case 4:\r\n        return {\r\n          x: 60,\r\n          opacity: 0,\r\n        };\r\n      case 5:\r\n        return {\r\n          enter: [\r\n            {\r\n              scale: 2,\r\n              opacity: 0,\r\n              type: 'set',\r\n            },\r\n            { scale: 1.2, opacity: 1, duration: 500 },\r\n            { scale: 0.9, duration: 400 },\r\n            { scale: 1.05, duration: 200 },\r\n            { scale: 1, duration: 100 },\r\n          ]\r\n        };\r\n      case 6:\r\n        return {\r\n          scale: 0.8,\r\n          x: 60,\r\n          y: -20,\r\n          opacity: 0,\r\n        };\r\n      default:\r\n        return {\r\n          opacity: 0,\r\n        };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-page theme\">\r\n      <h1 className=\"main-page__title\"><Texty enter={anim}>gotfilm</Texty></h1>\r\n      <Link className=\"main-page__icon\" to=\"/film\">\r\n        <Search className=\"search-icon_home theme\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst CustomLink = ({ history, to, onClick, tag: Tag, ...rest }) => (\r\n    <Tag\r\n        { ...rest }\r\n        onClick={ (event) => {\r\n            onClick(event);\r\n            history.push(to)\r\n        } }\r\n    />\r\n);\r\n\r\nCustomLink.propTypes = {\r\n    to: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }).isRequired,\r\n    onClick: PropTypes.func\r\n};\r\nCustomLink.defaultProps = {\r\n    onClick: () => { }\r\n};\r\nexport default withRouter(CustomLink);","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './LoginPage.scss'\r\nimport CustomLink from '../../components/CustomLink'\r\n\r\nconst LoginForm = (props) => {\r\n  const onFinish = (values) => {\r\n    alert('Логин, пароль, статус чекбокса выведены в консоль.')\r\n    console.log('Received values of form: ', values)\r\n  }\r\n\r\n  return (\r\n    <div className='formWrapper theme'>\r\n      <Form\r\n        name='login-form'\r\n        className='loginForm theme'\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Title className='loginForm__title' level={2}>\r\n          Вход\r\n        </Title>\r\n        <Form.Item\r\n          name='username'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Пожалуйста введите имя или ник!',\r\n            },\r\n          ]}\r\n        >\r\n          <label className='theme'>\r\n            Имя пользователя\r\n            <Input placeholder='Ваше имя' />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name='password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Пожалуйста введите пароль!',\r\n            },\r\n          ]}\r\n        >\r\n          <label className='theme'>\r\n            Пароль\r\n            <Input.Password type='password' placeholder='Ваш пароль' />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name='remember' noStyle valuePropName='checked'>\r\n            <Checkbox className='theme'>Запомнить меня</Checkbox>\r\n          </Form.Item>\r\n\r\n          <Link className='loginForm__forgot' to='/recovery_password'>\r\n            Забыли пароль?\r\n          </Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType='submit' className='loginForm__button'>\r\n            войти\r\n          </Button>\r\n          <div className='loginForm--switcher theme'>\r\n            или{' '}\r\n            <Link className='loginForm__linkToRegistration' to='/registration'>\r\n              зарегистрировать аккаунт\r\n            </Link>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n      <CustomLink\r\n        className='linkToSettings loginForm__button'\r\n        to='/settings'\r\n        tag={Button}\r\n      >\r\n        Назад к настройкам\r\n      </CustomLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import { Form, Input, Button, Checkbox } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomLink from \"../../components/CustomLink\";\r\n\r\nimport \"./RegistrationPage.scss\";\r\n\r\nconst RegistrationPage = (props) => {\r\n  const onFinish = (values) => {\r\n    alert(\r\n      \"Юзернейм, email, пароль, подтверждение пароля, статус чекбокса выведены в консоль.\"\r\n    );\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"formWrapper theme\">\r\n      <Form\r\n        name=\"registration-form\"\r\n        className=\"regForm theme\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <Title className=\"regForm__title\" level={2}>\r\n          Регистрация\r\n        </Title>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите имя или ник!\",\r\n            },\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            Имя пользователя\r\n            <Input placeholder=\"Ваше имя\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              required: true,\r\n              message: \"Введённый почтвой адрес не корректен\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите свою почту\",\r\n            },\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            E-mail\r\n            <Input placeholder=\"Ваша почта\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста введите пароль!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <label className=\"theme\">\r\n            Пароль\r\n            <Input.Password placeholder=\"Ваш пароль\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста подтвердите введённый пароль!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"Введённые пароли несовпадают!\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <label className=\"theme\">\r\n            Подтверждение пароля\r\n            <Input.Password placeholder=\"Подтвердите свой пароль\" />\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value\r\n                  ? Promise.resolve()\r\n                  : Promise.reject(\r\n                      new Error(\"Для регистрации примите соглашение\")\r\n                    ),\r\n            },\r\n          ]}\r\n        >\r\n          <Checkbox className=\"theme\">\r\n            Я прочитал(а){\" \"}\r\n            <Link className=\"regForm__agreement\" to=\"/agreement\">\r\n              соглашение\r\n            </Link>\r\n          </Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" className=\"regForm__button\">\r\n            Зарегистрироваться\r\n          </Button>\r\n        </Form.Item>\r\n\r\n        <div className=\"regForm--switcher theme\">\r\n          или{\" \"}\r\n          <Link className=\"regForm__linkToLogin\" to=\"/login\">\r\n            уже есть аккаунт\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n      <CustomLink\r\n        className='linkToSettings loginForm__button'\r\n        to='/settings'\r\n        tag={Button}\r\n      >\r\n        Назад к настройкам\r\n      </CustomLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = (props) => {\r\n    return <Spin className=\"loadingSpinner\" indicator={<LoadingOutlined spin />} />\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\n\r\nimport './FilmCard.scss';\r\n\r\nconst ErrorFilmCard = ({ error }) => {\r\n    const tryToRepair = () => {\r\n        localStorage.removeItem('settings');\r\n        window.location.replace(window.location.href);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filmCard--wrapper\">\r\n            <div className=\"filmCard__poster\"></div>\r\n            <div className=\"filmCard__infoBlock\">\r\n                <div className=\"filmCard__infoBlock--titleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__rate\">\r\n                    </p>\r\n                </div>\r\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__secondTitle\"></p>\r\n                    <p className=\"filmCard__infoBlock__year\"></p>\r\n                </div>\r\n                <p className=\"filmCard__infoBlock__error\"><span>{error}</span></p>\r\n                <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\r\n                <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\r\n                    <p className=\"filmCard__infoBlock__description\"></p>\r\n                </label>\r\n            </div>\r\n            <div className=\"filmCard__footer\">\r\n                <div className=\"filmCard__footer__buttonGroup\">\r\n                    <Button className=\"button\" onClick={tryToRepair}>Сброс настроек</Button>\r\n                </div>\r\n                <div className=\"filmCard__footer__emptyBlock\" ></div>\r\n            </div>\r\n            <div className=\"navigation\"></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nErrorFilmCard.propTypes = {\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default ErrorFilmCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\n\r\nimport './FilmCardButton.scss';\r\n\r\nconst FilmCardButton = (props) => {\r\n    return (\r\n        <Button onClick={props.eventAction} className=\"button\">{props.children}</Button>\r\n    )\r\n};\r\n\r\nFilmCardButton.propTypes = {\r\n    eventAction: PropTypes.func,\r\n    children: PropTypes.string\r\n}\r\n\r\nexport default FilmCardButton;","import React from 'react';\r\n\r\nconst Star = (props) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 676 400\" fill=\"#DA952D\"><path d=\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default Star;","import React from 'react';\r\n\r\nconst Bookmark = ({ status }) => {\r\n    return (\r\n        <svg version=\"1.1\" width=\"20\" height=\"20\"\r\n            viewBox=\"0 0 423.936 423.936\" fill={ status ? \"#DA952D\" : \"\" }>\r\n            <path d=\"M327.68,0H96.256c-22.528,0-40.96,18.432-40.96,40.96v357.376c0,9.728,5.632,18.944,14.336,23.04\r\n\t\t\tc9.216,4.096,19.456,3.072,27.136-3.072l0.512-0.512l114.688-96.768l114.688,96.768l0.512,0.512\r\n\t\t\tc4.608,3.584,10.24,5.632,15.872,5.632c3.584,0,7.68-1.024,11.264-3.072c8.704-4.096,14.336-13.312,14.336-23.04V40.96\r\n\t\t\tC368.64,18.432,350.208,0,327.68,0z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Bookmark;","import Icon from '@ant-design/icons';\r\n\r\nconst KpSvg = () => (\r\n<svg viewBox=\"0 0 448 512\" width=\"20\" height=\"20\">\r\n  <path fill=\"#DA952D\" d=\"M240.494 32h-.152C130.265 32.608 0 117.049 0 253.492v1.368C0 388.002 113.567 480 209.938 480h.76C344.542 480 448 400.419 448 251.819v-.759C448 119.571 365.472 32 240.494 32zM133.473 372.447c-20.158 6.592-55.203-20.312-53.283-44.77 1.92-24.458 21.326-52.65 53.283-46.594 31.957 6.056 40.068 18.385 38.689 46.594-1.379 28.209-18.531 38.178-38.689 44.77zm21.282-168.894c-25.137-1.324-44.738-18.812-44.77-43.553-.032-24.741 15.578-47.853 44.77-44.77 29.192 3.083 44.677 16.16 42.945 44.77-1.732 28.61-17.808 44.877-42.945 43.553zM224 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm68.637 114.851c-29.495-1.571-48.203-22.417-46.594-46.594 1.609-24.177 18.415-46.51 46.594-48.418 28.179-1.908 51.972 23.596 52.067 48.418.095 24.822-22.572 48.165-52.067 46.594zm22.498-178.014c-25.174-5.241-36.892-24.102-38.08-43.554-1.188-19.452 22.05-44.135 41.769-40.568 17.63-.751 37.197 11.684 42.297 39.352 5.1 27.668-20.812 50.011-45.986 44.77z\"/>\r\n  <path fill=\"none\" d=\"M448.5 96v320c-.022 17.777-7.246 33.966-18.89 45.61-11.644 11.644-27.833 18.868-45.61 18.89H64c-17.777-.022-33.966-7.246-45.61-18.89C6.746 449.966-.478 433.777-.5 416V96c.022-17.777 7.246-33.966 18.89-45.61C30.034 38.746 46.223 31.522 64 31.5h320c17.777.022 33.966 7.246 45.61 18.89C441.254 62.034 448.478 78.223 448.5 96zm-19.597-44.903C417.384 39.579 401.573 32.478 384 32.5H64c-17.573-.022-33.384 7.079-44.903 18.597C7.579 62.616.478 78.427.5 96v320c-.022 17.573 7.079 33.384 18.597 44.903C30.616 472.421 46.427 479.522 64 479.5h320c17.573.022 33.384-7.079 44.903-18.597 11.518-11.519 18.619-27.33 18.597-44.903V96c.022-17.573-7.079-33.384-18.597-44.903zM128 384.5c-8.937 0-17.126-3.666-22.98-9.52-5.854-5.854-9.52-14.043-9.52-22.98 0-8.937 3.666-17.126 9.52-22.98 5.854-5.854 14.043-9.52 22.98-9.52 8.937 0 17.126 3.666 22.98 9.52 5.854 5.854 9.52 14.043 9.52 22.98 0 8.937-3.666 17.126-9.52 22.98-5.854 5.854-14.043 9.52-22.98 9.52zm22.273-10.227c5.728-5.729 9.227-13.54 9.227-22.273s-3.499-16.544-9.227-22.273c-5.729-5.728-13.54-9.227-22.273-9.227s-16.544 3.499-22.273 9.227C99.999 335.456 96.5 343.267 96.5 352s3.499 16.544 9.227 22.273c5.729 5.728 13.54 9.227 22.273 9.227s16.544-3.499 22.273-9.227zM128 192.5c-8.937 0-17.126-3.666-22.98-9.52-5.854-5.854-9.52-14.043-9.52-22.98 0-8.937 3.666-17.126 9.52-22.98 5.854-5.854 14.043-9.52 22.98-9.52 8.937 0 17.126 3.666 22.98 9.52 5.854 5.854 9.52 14.043 9.52 22.98 0 8.937-3.666 17.126-9.52 22.98-5.854 5.854-14.043 9.52-22.98 9.52zm22.273-10.227c5.728-5.729 9.227-13.54 9.227-22.273s-3.499-16.544-9.227-22.273c-5.729-5.728-13.54-9.227-22.273-9.227s-16.544 3.499-22.273 9.227C99.999 143.456 96.5 151.267 96.5 160s3.499 16.544 9.227 22.273c5.729 5.728 13.54 9.227 22.273 9.227s16.544-3.499 22.273-9.227zM224 288.5c-8.937 0-17.126-3.666-22.98-9.52-5.854-5.854-9.52-14.043-9.52-22.98 0-8.937 3.666-17.126 9.52-22.98 5.854-5.854 14.043-9.52 22.98-9.52 8.937 0 17.126 3.666 22.98 9.52 5.854 5.854 9.52 14.043 9.52 22.98 0 8.937-3.666 17.126-9.52 22.98-5.854 5.854-14.043 9.52-22.98 9.52zm22.273-10.227c5.728-5.729 9.227-13.54 9.227-22.273s-3.499-16.544-9.227-22.273c-5.729-5.728-13.54-9.227-22.273-9.227s-16.544 3.499-22.273 9.227c-5.728 5.729-9.227 13.54-9.227 22.273s3.499 16.544 9.227 22.273c5.729 5.728 13.54 9.227 22.273 9.227s16.544-3.499 22.273-9.227zM320 384.5c-8.937 0-17.126-3.666-22.98-9.52-5.854-5.854-9.52-14.043-9.52-22.98 0-8.937 3.666-17.126 9.52-22.98 5.854-5.854 14.043-9.52 22.98-9.52 8.937 0 17.126 3.666 22.98 9.52 5.854 5.854 9.52 14.043 9.52 22.98 0 8.937-3.666 17.126-9.52 22.98-5.854 5.854-14.043 9.52-22.98 9.52zm22.273-10.227c5.728-5.729 9.227-13.54 9.227-22.273s-3.499-16.544-9.227-22.273c-5.729-5.728-13.54-9.227-22.273-9.227s-16.544 3.499-22.273 9.227c-5.728 5.729-9.227 13.54-9.227 22.273s3.499 16.544 9.227 22.273c5.729 5.728 13.54 9.227 22.273 9.227s16.544-3.499 22.273-9.227zM320 192.5c-8.937 0-17.126-3.666-22.98-9.52-5.854-5.854-9.52-14.043-9.52-22.98 0-8.937 3.666-17.126 9.52-22.98 5.854-5.854 14.043-9.52 22.98-9.52 8.937 0 17.126 3.666 22.98 9.52 5.854 5.854 9.52 14.043 9.52 22.98 0 8.937-3.666 17.126-9.52 22.98-5.854 5.854-14.043 9.52-22.98 9.52zm22.273-10.227c5.728-5.729 9.227-13.54 9.227-22.273s-3.499-16.544-9.227-22.273c-5.729-5.728-13.54-9.227-22.273-9.227s-16.544 3.499-22.273 9.227c-5.728 5.729-9.227 13.54-9.227 22.273s3.499 16.544 9.227 22.273c5.729 5.728 13.54 9.227 22.273 9.227s16.544-3.499 22.273-9.227z\"/>\r\n</svg>\r\n);\r\n\r\nconst Kp = props => <Icon component={KpSvg} {...props} />;\r\n\r\nexport default Kp;","import Icon from '@ant-design/icons';\r\n\r\nconst SettingsSvg = () => (\r\n    <svg viewBox=\"0 0 48 48\" width=\"35px\" height=\"35px\"><path d=\"M39.139,26.282C38.426,25.759,38,24.919,38,24.034s0.426-1.725,1.138-2.247l3.294-2.415\tc0.525-0.386,0.742-1.065,0.537-1.684c-0.848-2.548-2.189-4.872-3.987-6.909c-0.433-0.488-1.131-0.642-1.728-0.38l-3.709,1.631\tc-0.808,0.356-1.749,0.305-2.516-0.138c-0.766-0.442-1.28-1.23-1.377-2.109l-0.446-4.072c-0.071-0.648-0.553-1.176-1.191-1.307\tc-2.597-0.531-5.326-0.54-7.969-0.01c-0.642,0.129-1.125,0.657-1.196,1.308l-0.442,4.046c-0.097,0.88-0.611,1.668-1.379,2.11\tc-0.766,0.442-1.704,0.495-2.515,0.138l-3.729-1.64c-0.592-0.262-1.292-0.11-1.725,0.377c-1.804,2.029-3.151,4.35-4.008,6.896\tc-0.208,0.618,0.008,1.301,0.535,1.688l3.273,2.4C9.574,22.241,10,23.081,10,23.966s-0.426,1.725-1.138,2.247l-3.294,2.415\tc-0.525,0.386-0.742,1.065-0.537,1.684c0.848,2.548,2.189,4.872,3.987,6.909c0.433,0.489,1.133,0.644,1.728,0.38l3.709-1.631\tc0.808-0.356,1.748-0.305,2.516,0.138c0.766,0.442,1.28,1.23,1.377,2.109l0.446,4.072c0.071,0.648,0.553,1.176,1.191,1.307\tC21.299,43.864,22.649,44,24,44c1.318,0,2.648-0.133,3.953-0.395c0.642-0.129,1.125-0.657,1.196-1.308l0.443-4.046\tc0.097-0.88,0.611-1.668,1.379-2.11c0.766-0.441,1.705-0.493,2.515-0.138l3.729,1.64c0.594,0.263,1.292,0.111,1.725-0.377\tc1.804-2.029,3.151-4.35,4.008-6.896c0.208-0.618-0.008-1.301-0.535-1.688L39.139,26.282z M24,31c-3.866,0-7-3.134-7-7s3.134-7,7-7\ts7,3.134,7,7S27.866,31,24,31z\" /></svg>\r\n);\r\n\r\nconst Settings = props => <Icon component={ SettingsSvg } { ...props } />;\r\n\r\nexport default Settings;","import Icon from '@ant-design/icons';\r\n\r\nconst HamburgerSvg = () => (\r\n    <svg viewBox=\"0 0 100 80\" width=\"32\" height=\"32\">\r\n        <rect width=\"100\" height=\"20\"></rect>\r\n        <rect y=\"30\" width=\"100\" height=\"20\"></rect>\r\n        <rect y=\"60\" width=\"100\" height=\"20\"></rect>\r\n    </svg>\r\n);\r\n\r\nconst Hamburger = props => <Icon component={ HamburgerSvg } { ...props } />;\r\n\r\nexport default Hamburger;","import React from \"react\";\r\nimport Search from '../icons/Search';\r\nimport Settings from '../icons/Settings';\r\nimport Hamburger from '../icons/Hamburger';\r\nimport CustomLink from '../CustomLink';\r\n\r\nimport { Radio } from 'antd';\r\n\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <Radio.Group className=\"navigation__container\" defaultValue={ props.checked } >\r\n\r\n            <CustomLink to='/lists'\r\n                        value=\"lists\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Hamburger />\r\n            </CustomLink>\r\n\r\n            <span className=\"divition-line\"></span>\r\n\r\n            <CustomLink to='/film'\r\n                        value=\"search\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Search className=\"search-icon_small\" />\r\n            </CustomLink>\r\n\r\n            <span className=\"divition-line\"></span>\r\n\r\n            <CustomLink to='/settings'\r\n                        value=\"settings\"\r\n                        tag={ Radio }\r\n                        className=\"navigation__buttons\"\r\n            >\r\n                <Settings />\r\n            </CustomLink>\r\n\r\n        </Radio.Group>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Image, notification } from 'antd';\r\nimport Spinner from '../../components/Spinner';\r\nimport ErrorFilmCard from './ErrorFilmCard';\r\nimport FilmCardButton from '../../components/FilmCardButton/FilmCardButton';\r\nimport Star from '../../components/icons/Star';\r\nimport Bookmark from '../../components/icons/Bookmark';\r\nimport Kp from '../../components/icons/Kp';\r\nimport './FilmCard.scss';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\n\r\n\r\nconst IMAGE_ENDPOINT = 'https://st.kp.y'+'a'+'ndex.net/images';\r\nconst getKPlink = (id, type) => `https://www.kinop${'o'}isk.ru/${type === 'FILM' ? 'film' : 'series'}/${id}/`;\r\n\r\n\r\nconst FilmCard = ({ film, addToTemporary, seenFilm, removeFilm, error, notify, removeNotification, status, addToFavorites }) => {\r\n    const cardEndRef = useRef(null);\r\n    \r\n    const handleScrollToBottom = useCallback(() => {\r\n        cardEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleScrollToBottom();\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleScrollToBottom();\r\n    }, [film, handleScrollToBottom]);\r\n\r\n    useEffect(() => {\r\n        if (notify.message && notify.description) {\r\n            notification[notify.type]({\r\n                duration: 5,\r\n                message: notify.message,\r\n                description: notify.description\r\n            });\r\n            removeNotification();\r\n        }\r\n    }, [notify, removeNotification]);\r\n\r\n    const handleChangeFontSize = useCallback(() => {\r\n        if (film.name.length > 15 && film.name.length < 30) {\r\n            return '20px';\r\n        } else if (film.name.length >= 30) {\r\n            return '18px';\r\n        } else {\r\n            return '25px';\r\n        }\r\n    }, [film]);\r\n\r\n    const handleKpOpen = () => {\r\n        window.open(getKPlink(film.id, film.type), \"_blank\");\r\n    }\r\n\r\n    const ageFormatted = film.age !== null && `, ${film.age}+`;\r\n\r\n    return (\r\n        error ? <ErrorFilmCard error={error}/> :\r\n        <div className=\"filmCard--wrapper theme\">\r\n            <div className=\"filmCard__poster\">\r\n                <img className=\"filmCard__poster__background\" alt=\"\"\r\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\r\n                />\r\n                <Image className=\"filmCard__poster__image\" alt={ film.name }\r\n                    preview={ { src: `${IMAGE_ENDPOINT}/film_big/${film.id}.jpg` } }\r\n                    src={ `${IMAGE_ENDPOINT}/film_iphone/iphone360_${film.id}.jpg` }\r\n                    placeholder={ <Spinner /> }\r\n                />\r\n            </div>\r\n            <div className=\"filmCard__infoBlock theme\">\r\n                <div className=\"filmCard__infoBlock--titleWrapper\">\r\n                    <h3 className=\"filmCard__infoBlock__title\" style={ { fontSize: handleChangeFontSize() } }>{ film.name }</h3>\r\n                    <p className=\"filmCard__infoBlock__rate\">\r\n                        <Star />\r\n                        { film.rate }\r\n                    </p>\r\n                </div>\r\n                <div className=\"filmCard__infoBlock--secondTitleWrapper\">\r\n                    <p className=\"filmCard__infoBlock__secondTitle\">{ film.secondName }</p>\r\n                    <p className=\"filmCard__infoBlock__year\">{ film.year }г. ({ film.countries.join(', ') })</p>\r\n                </div>\r\n                <p className=\"filmCard__infoBlock__genre\">{ film.genres.join(', ') }<span>{ ageFormatted }</span></p>\r\n                <hr className=\"filmCard__infoBlock--underline\" />\r\n                <div className=\"filmCard__infoBlock--scrollableWrapper\">\r\n                    <input type=\"checkbox\" name=\"hiddenDesc\" id=\"hiddenDesc\" className=\"inputDesc\" />\r\n                    <label htmlFor=\"hiddenDesc\" className=\"filmCard__infoBlock__description--label\">\r\n                        <p className=\"filmCard__infoBlock__description\">{ film.description }</p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"filmCard__footer theme\">\r\n                <div className=\"filmCard__footer__buttonGroup\">\r\n                    <FilmCardButton eventAction={ seenFilm }>уже смотрел</FilmCardButton>\r\n                    <FilmCardButton eventAction={ removeFilm }>не предлагать</FilmCardButton>\r\n                </div>\r\n                <div className=\"filmCard__footer__buttonGroup\">\r\n                    <button className={`small__button${status ? ' active' : ''}`} onClick={ addToFavorites }>\r\n                        <Bookmark status={ status } />\r\n                    </button>\r\n                    <FilmCardButton eventAction={ addToTemporary }>в другой раз</FilmCardButton>\r\n                    <button className=\"small__button\" onClick={ handleKpOpen }>\r\n                        <Kp className=\"theme\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"filmCard__footer__emptyBlock\" ref={ cardEndRef }></div>\r\n            </div>\r\n            <Navigation checked={ 'search' } />\r\n        </div>\r\n    )\r\n};\r\n\r\nFilmCard.propTypes = {\r\n    error: PropTypes.string,\r\n    notify: PropTypes.object,\r\n    film: PropTypes.object,\r\n    removeFilm: PropTypes.func,\r\n    seenFilm: PropTypes.func,\r\n    addToTemporary: PropTypes.func,\r\n    addToFavorites: PropTypes.func\r\n};\r\n\r\nexport default FilmCard;","export const LOAD_FILMS = '@@film/LOAD_FILMS';\r\nexport const LOAD_FILMS_STARTED = '@@film/LOAD_FILMS_STARTED';\r\nexport const LOAD_FILMS_FAILURE = '@@film/LOAD_FILMS_FAILURE';\r\nexport const ADD_TO_HISTORY = '@@film/ADD_TO_HISTORY';\r\nexport const ADD_TO_BLACKLIST = '@@film/ADD_TO_BLACKLIST';\r\nexport const ADD_TO_TEMPORARY = '@@film/ADD_TO_TEMPORARY';\r\nexport const ADD_TO_ALREADY_SEEN = '@@film/ADD_TO_ALREADY_SEEN';\r\nexport const ADD_TO_FAVORITES = '@@film/ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_HISTORY = '@@film/REMOVE_FROM_HISTORY';\r\nexport const REMOVE_FROM_ALREADY_SEEN = '@@film/REMOVE_FROM_ALREADY_SEEN';\r\nexport const REMOVE_FROM_BLACKLIST = '@@film/REMOVE_FROM_BLACKLIST';\r\nexport const REMOVE_FROM_TEMPORARY = '@@film/REMOVE_FROM_TEMPORARY';\r\nexport const REMOVE_FROM_FAVORITES = '@@film/REMOVE_FROM_FAVORITES';\r\nexport const SET_SETTINGS = '@@settings/SET_SETTINGS';\r\nexport const CLEAR_SETTINGS = '@@settings/CLEAR_SETTINGS';\r\nexport const SHOW_NOTIFICATION = '@@film/SHOW_NOTIFICATION';\r\nexport const REMOVE_NOTIFICATION = '@@film/REMOVE_NOTIFICATION';\r\nexport const SELECT_FILM = '@@film/SELECT_FILM';\r\nexport const CLEAR_LISTS = '@@film/CLEAR_LISTS';\r\n\r\nexport const loadFilms = (films) => ({\r\n    type: LOAD_FILMS,\r\n    films\r\n});\r\n\r\nexport const loadFilmsStarted = () => ({\r\n    type: LOAD_FILMS_STARTED\r\n});\r\n\r\nexport const loadFilmsFailure = (error) => ({\r\n    type: LOAD_FILMS_FAILURE,\r\n    error\r\n});\r\n\r\nexport const selectFilm = (film) => ({\r\n    type: SELECT_FILM,\r\n    film\r\n});\r\n\r\nexport const addToHistory = (filmId) => ({\r\n    type: ADD_TO_HISTORY,\r\n    filmId\r\n});\r\n\r\nexport const addToBlacklist = (filmId) => ({\r\n    type: ADD_TO_BLACKLIST,\r\n    filmId\r\n});\r\n\r\nexport const addToTemporary = (filmId) => ({\r\n    type: ADD_TO_TEMPORARY,\r\n    filmId\r\n});\r\n\r\nexport const addToAlreadySeen = (filmId) => ({\r\n    type: ADD_TO_ALREADY_SEEN,\r\n    filmId\r\n});\r\n\r\nexport const addToFavorites = (filmId) => ({\r\n    type: ADD_TO_FAVORITES,\r\n    filmId\r\n});\r\n\r\nexport const removeFromHistory = (filmId) => ({\r\n    type: REMOVE_FROM_HISTORY,\r\n    filmId\r\n});\r\n\r\nexport const removeFromAlreadySeen = (filmId) => ({\r\n    type: REMOVE_FROM_ALREADY_SEEN,\r\n    filmId\r\n});\r\n\r\nexport const removeFromBlacklist = (filmId) => ({\r\n    type: REMOVE_FROM_BLACKLIST,\r\n    filmId\r\n});\r\n\r\nexport const removeFromTemporary = (filmId) => ({\r\n    type: REMOVE_FROM_TEMPORARY,\r\n    filmId\r\n});\r\n\r\nexport const removeFromFavorites = (filmId) => ({\r\n    type: REMOVE_FROM_FAVORITES,\r\n    filmId\r\n});\r\n\r\nexport const clearLists = () => ({\r\n    type: CLEAR_LISTS\r\n});\r\n\r\nexport const clearSettings = () => ({\r\n    type: CLEAR_SETTINGS\r\n});\r\n\r\nexport const setSettings = (settings) => ({\r\n    type: SET_SETTINGS,\r\n    settings\r\n});\r\n\r\nexport const showNotification = (notifyType, message, description) => ({\r\n    type: SHOW_NOTIFICATION,\r\n    notifyType,\r\n    message,\r\n    description\r\n});\r\n\r\nexport const removeNotification = () => ({\r\n    type: REMOVE_NOTIFICATION\r\n});","import axios from 'axios';\r\nimport { loadFilms, loadFilmsStarted, loadFilmsFailure, showNotification } from './filmActions';\r\nimport { selectFilm, addToHistory, addToBlacklist, addToAlreadySeen, addToFavorites, removeFromAlreadySeen, removeFromBlacklist, removeFromFavorites, removeFromHistory } from './filmActions';\r\nimport { setSettings } from './filmActions';\r\n\r\n/**\r\n * Сохраняет список в local storage\r\n * \r\n * @param {string} listName - имя списка для сохранения.\r\n */\r\nexport const saveList = (listName) => {\r\n    return (dispatch, getState) => {\r\n        const { [listName]: list } = getState().filmReducer;\r\n        localStorage.setItem(listName, JSON.stringify(list));\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Отправляет уведомление для страницы фильмов при маленькой выборке\r\n * \r\n * @param {number} count - количество фильмов в текущей выборке.\r\n */\r\n export const noFilmsNotification = (count) => {\r\n    const getFilmWords = () => {\r\n        const titles = [`остался ${count} фильм`, `осталось ${count} фильма`, `осталось ${count} фильмов`];\r\n        const cases = [2, 0, 1, 1, 1, 2];  \r\n        return titles[ (count % 100 > 4 && count % 100 < 20) ? 2 : cases[(count % 10 < 5) ? count % 10 : 5] ];  \r\n    }\r\n    count--;\r\n    return (dispatch) => {\r\n        if (count > 0){\r\n            dispatch(showNotification(\r\n                'warning',\r\n                'Выборка фильмов заканчивается',\r\n                `В текущей выборке ${getFilmWords()}. Измените настройки поиска на более широкие.`,\r\n            ))\r\n        } else {\r\n            dispatch(showNotification(\r\n                'error',\r\n                'Выборка фильмов пуста',\r\n                'В текущей выборке не осталось фильмов. Поиск недоступен. Измените настройки поиска на более широкие.',\r\n            ))\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Заменяет текущие настройки и сохраняет их в localStorage\r\n * \r\n * @param {object} settings - новый объект настроек.\r\n */\r\nexport const setSettingsAndSave = (settings) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setSettings(settings));\r\n        dispatch(saveList('settings'));\r\n        dispatch(showNotification(\r\n            'success',\r\n            'Настройки успешно сохранены',\r\n            'Выполнен новый поиск в соответствии с запросом.',\r\n        ));\r\n    }\r\n};\r\n\r\n/**\r\n * Добавляет фильм в список, затем сохраняет список в local storage\r\n * \r\n * @param {number} filmId - id добавляемого фильма.\r\n * @param {string} [listName=\"history\"] - имя списка для добавляемого фильма и сохранения.\r\n */\r\nexport const addToListAndSave = (filmId, listName = \"history\") => {\r\n    return (dispatch, getState) => {\r\n        switch (listName) {\r\n            case \"blacklist\":\r\n                dispatch(addToBlacklist(filmId));\r\n                break;\r\n            case \"alreadySeen\":\r\n                dispatch(addToAlreadySeen(filmId));\r\n                break;\r\n            case \"favorites\":\r\n                dispatch(addToFavorites(filmId));\r\n                break;\r\n            default:\r\n                dispatch(addToHistory(filmId));\r\n        }\r\n        dispatch(saveList(listName));\r\n    }\r\n};\r\n\r\n/**\r\n * Удаляет фильм из списка, затем сохраняет список в local storage\r\n * \r\n * @param {number} filmId - id удаляемого фильма.\r\n * @param {string} [listName=\"history\"] - имя списка для удаляемого фильма и сохранения.\r\n */\r\nexport const removeFromListAndSave = (filmId, listName = \"history\") => {\r\n    return (dispatch, getState) => {\r\n        switch (listName) {\r\n            case \"blacklist\":\r\n                dispatch(removeFromBlacklist(filmId));\r\n                break;\r\n            case \"alreadySeen\":\r\n                dispatch(removeFromAlreadySeen(filmId));\r\n                break;\r\n            case \"favorites\":\r\n                dispatch(removeFromFavorites(filmId));\r\n                break;\r\n            default:\r\n                dispatch(removeFromHistory(filmId));\r\n        }\r\n        dispatch(saveList(listName));\r\n    }\r\n};\r\n\r\n/**\r\n * Действие нажатия на кнопку закладки\r\n * \r\n * @param {number} filmId - id фильма.\r\n * @param {string} [listName=\"favorites\"] - имя списка для добавления/удаления фильма. По умолчанию - избранные фильмы.\r\n */\r\nexport const favoriteIconPush = (filmId, listName = \"favorites\") => {\r\n    return (dispatch, getState) => {\r\n        const { [listName]: list } = getState().filmReducer;\r\n        if (list.list[filmId]) {\r\n            dispatch(removeFromListAndSave(filmId, listName));\r\n        } else {\r\n            dispatch(addToListAndSave(filmId, listName));\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Рассчитывает с учётом фильтров следующий фильм для показа, \r\n * в случае успеха добавляет его в историю и показывает\r\n * в случае неудачи показывает уведомление\r\n */\r\nexport const changeFilm = () => {\r\n    return (dispatch, getState) => {\r\n        let film, randomIndex = 0;\r\n        const { films, blacklist, alreadySeen, temporary, settings, history, film: current } = getState().filmReducer;\r\n        const { types, ratings, years, genres, countries } = settings.filters;\r\n        // фильтры\r\n        const typesFilter = (film) => (types.length !== 1 || film.type === types[0]);\r\n        const ratingsFilter = (film) => (film.rate > ratings[0] && film.rate < ratings[1]);\r\n        const yearsFilter = (film) => (film.year > years[0] && film.year < years[1]);\r\n        const genresFilter = (film) => film.genres.some(genre => genres.includes(genre));\r\n        const countriesFilter = (film) => film.countries.some(country => countries.includes(country));\r\n        const blacklistFilter = (film) => !!!blacklist.list[film.id];\r\n        const alreadySeenFilter = (film) => !!!alreadySeen.list[film.id];\r\n        const temporaryFilter = (film) => !!!temporary.list[film.id];\r\n        const noCurrentFilter = (film) => !!!current || (film.id !== current.id);\r\n\r\n        // фильтр всё в одном\r\n        const appendFilters = (film) => [\r\n            typesFilter, \r\n            ratingsFilter, \r\n            yearsFilter, \r\n            genresFilter, \r\n            countriesFilter, \r\n            blacklistFilter, \r\n            alreadySeenFilter,\r\n            temporaryFilter,\r\n            noCurrentFilter\r\n        ].every(filter => filter(film));\r\n\r\n        // фильтрация и сортировка по ранкингу кинопоиска\r\n        const filteredFilms = films.filter(film => appendFilters(film)).sort((a, b) => a.kpOrder - b.kpOrder);\r\n\r\n        if (current === null) {\r\n            if (history.data.length) {\r\n                const historyLast = history.data.reverse()[0];\r\n                return dispatch(selectFilm(films.findIndex(elem => elem.id === historyLast.id)));\r\n            } else if (!filteredFilms.length) {\r\n                dispatch(selectFilm(0));\r\n                return dispatch(loadFilmsFailure('Ошибка загрузки фильма. Попробуйте сбросить настройки.'));\r\n            }\r\n        }\r\n\r\n        if (filteredFilms.length - 1 < 4) {dispatch(noFilmsNotification(filteredFilms.length));};\r\n        // если следующих фильмов нет, то показали уведомление (выше) и больше ничего не делаем\r\n        if (current && filteredFilms.length === 0) {return;};\r\n\r\n        // случайный выбор фильма (если фильмов больше 4 то отсекаем вторую половину по ранкингу кинопоиска)\r\n        randomIndex = ~~(Math.random() * ((filteredFilms.length > 4) ? filteredFilms.length * 0.5 : filteredFilms.length));\r\n        film = filteredFilms[randomIndex];\r\n\r\n        // выбор фильма по порядку в ранкинге кинопоиска\r\n        // film = filteredFilms[randomIndex++];\r\n        \r\n        dispatch(selectFilm(films.findIndex(elem => elem === film)));\r\n        dispatch(addToListAndSave(film.id));\r\n    }\r\n};\r\n\r\n/**\r\n * Загружает фильмы и запускает выбор одного из них\r\n */\r\nexport const fetchFilms = () => {\r\n    return dispatch => {\r\n        dispatch(loadFilmsStarted());\r\n\r\n        axios.get(\"./films.json\")\r\n            .then(response => {\r\n                dispatch(loadFilms(response.data));\r\n                dispatch(changeFilm());\r\n            })\r\n            .catch(err => {\r\n                dispatch(loadFilmsFailure(err.message));\r\n            });\r\n    }\r\n};","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport FilmCard from '../pages/FilmCard';\r\nimport { addToListAndSave, changeFilm, favoriteIconPush } from '../store/actions/complexFilmActions';\r\nimport { addToTemporary, removeNotification } from '../store/actions/filmActions';\r\n\r\nconst FilmCardContainer = ({ film, addToListAndSave, addToTemporary, changeFilm, error, notification, removeNotification, favorites, favoriteIconPush }) => {\r\n    const handleChangeFilm = useCallback(() => {\r\n        changeFilm();\r\n    }, [changeFilm]);\r\n\r\n    const handleAddToFavorites = useCallback(() => {\r\n        favoriteIconPush(film.id);\r\n    }, [film, favorites.list, favoriteIconPush])\r\n\r\n    const handleMoveFilmToBlacklist = useCallback(() => {\r\n        addToListAndSave(film.id, \"blacklist\");\r\n        handleChangeFilm();\r\n    }, [film, addToListAndSave, handleChangeFilm]);\r\n\r\n    const handleMoveFilmToAlreadySeen = useCallback(() => {\r\n        addToListAndSave(film.id, \"alreadySeen\");\r\n        handleChangeFilm();\r\n    }, [film, addToListAndSave, handleChangeFilm]);\r\n\r\n    const handleMoveFilmToTemporary = useCallback(() => {\r\n        addToTemporary(film.id);\r\n        handleChangeFilm();\r\n    }, [film, addToTemporary, handleChangeFilm]);\r\n\r\n    return (\r\n        !film \r\n            ? <Spinner /> \r\n            : <FilmCard error={error} \r\n                        notify={notification} \r\n                        removeNotification={removeNotification} \r\n                        film={film} \r\n                        addToTemporary={handleMoveFilmToTemporary} \r\n                        removeFilm={handleMoveFilmToBlacklist} \r\n                        seenFilm={handleMoveFilmToAlreadySeen} \r\n                        addToFavorites={handleAddToFavorites} \r\n                        status={favorites.list[film.id]}\r\n            />\r\n    )\r\n};\r\n\r\nFilmCardContainer.propTypes = {\r\n    error: PropTypes.string,\r\n    notification: PropTypes.object,\r\n    film: PropTypes.object,\r\n    favoritesList: PropTypes.object,\r\n    addToListAndSave: PropTypes.func,\r\n    addToTemporary: PropTypes.func,\r\n    changeFilm: PropTypes.func,\r\n    removeNotification: PropTypes.func,\r\n    favoriteIconPush: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    favorites: filmReducer.favorites,\r\n    error: filmReducer.error,\r\n    film: filmReducer.film,\r\n    notification: filmReducer.notification\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToListAndSave, changeFilm, favoriteIconPush, addToTemporary, removeNotification }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmCardContainer);","export const TYPES = [{value:'FILM', label:'Фильмы'},{value:'TV_SHOW', label:'Сериалы/Шоу'}];\r\nexport const RATINGS = { 5: 'от 5', 10: 'до 10' };\r\nexport const YEARS = { 1980: 'c 1980', 2021: 'по 2021' };\r\nexport const GENRES = [{value:\"Все\"},{value:\"документальный\"},{value:\"комедия\"},{value:\"короткометражка\"},{value:\"фэнтези\"},{value:\"мюзикл\"},{value:\"мелодрама\"},{value:\"мультфильм\"},{value:\"концерт\"},{value:\"музыка\"},{value:\"драма\"},{value:\"криминал\"},{value:\"фантастика\"},{value:\"биография\"},{value:\"ток-шоу\"},{value:\"боевик\"},{value:\"детский\"},{value:\"семейный\"},{value:\"история\"},{value:\"детектив\"},{value:\"игра\"},{value:\"военный\"},{value:\"приключения\"},{value:\"триллер\"},{value:\"реальное ТВ\"},{value:\"спорт\"},{value:\"ужасы\"},{value:\"аниме\"},{value:\"вестерн\"},{value:\"новости\"},{value:\"церемония\"},{value:\"фильм-нуар\"},{value:\"для взрослых\"}];\r\nexport const COUNTRIES = [{value:\"Все\"},{value:\"США\"},{value:\"Россия\"},{value:\"СССР\"},{value:\"Австралия\"},{value:\"Япония\"},{value:\"Великобритания\"},{value:\"Франция\"},{value:\"Корея Южная\"},{value:\"Нидерланды\"},{value:\"Индия\"},{value:\"Ирландия\"},{value:\"Канада\"},{value:\"Венгрия\"},{value:\"Италия\"},{value:\"Австрия\"},{value:\"Китай\"},{value:\"Германия\"},{value:\"Турция\"},{value:\"Украина\"},{value:\"Марокко\"},{value:\"Финляндия\"},{value:\"Испания\"},{value:\"Бельгия\"},{value:\"Германия (ФРГ)\"},{value:\"Новая Зеландия\"},{value:\"Польша\"},{value:\"Ботсвана\"},{value:\"Мальта\"},{value:\"Иран\"},{value:\"Швеция\"},{value:\"Армения\"},{value:\"Беларусь\"},{value:\"ЮАР\"},{value:\"Тайвань\"},{value:\"Мексика\"},{value:\"Аргентина\"},{value:\"Швейцария\"},{value:\"Колумбия\"},{value:\"Исландия\"},{value:\"Казахстан\"},{value:\"Индонезия\"},{value:\"Сингапур\"},{value:\"Чехословакия\"},{value:\"Узбекистан\"},{value:\"Норвегия\"},{value:\"Румыния\"},{value:\"Гонконг\"},{value:\"Люксембург\"},{value:\"Бразилия\"},{value:\"Дания\"},{value:\"Сербия и Черногория\"},{value:\"Грузия\"},{value:\"Филиппины\"},{value:\"Югославия\"},{value:\"Чехия\"},{value:\"ОАЭ\"},{value:\"Египет\"},{value:\"Израиль\"},{value:\"Болгария\"},{value:\"Ливан\"},{value:\"Тунис\"},{value:\"Венесуэла\"},{value:\"Монголия\"},{value:\"Югославия (ФР)\"},{value:\"Германия (ГДР)\"},{value:\"Азербайджан\"},{value:\"Куба\"},{value:\"Словакия\"},{value:\"Греция\"},{value:\"Лихтенштейн\"},{value:\"Эстония\"},{value:\"Молдова\"},{value:\"Хорватия\"},{value:\"Российская империя\"},{value:\"Перу\"},{value:\"Таиланд\"},{value:\"Алжир\"},{value:\"Киргизия\"},{value:\"Багамы\"},{value:\"Андорра\"},{value:\"Палестина\"},{value:\"Сербия\"},{value:\"Северная Македония\"},{value:\"Латвия\"},{value:\"Словения\"},{value:\"Французская Полинезия\"},{value:\"Шри-Ланка\"},{value:\"Чили\"},{value:\"Бангладеш\"},{value:\"Камбоджа\"},{value:\"Португалия\"},{value:\"Пуэрто Рико\"},{value:\"Танзания\"},{value:\"Босния и Герцеговина\"},{value:\"Уругвай\"},{value:\"Ямайка\"},{value:\"Саудовская Аравия\"},{value:\"Вьетнам\"},{value:\"Косово\"},{value:\"Руанда\"},{value:\"Сирия\"},{value:\"Намибия\"},{value:\"Македония\"},{value:\"Литва\"},{value:\"Конго\"},{value:\"Кения\"},{value:\"Ирак\"},{value:\"Бутан\"},{value:\"Кувейт\"},{value:\"Ливия\"},{value:\"Монако\"},{value:\"Малайзия\"},{value:\"Корея Северная\"},{value:\"Афганистан\"},{value:\"Таджикистан\"},{value:\"Катар\"},{value:\"Ватикан\"},{value:\"Кипр\"},{value:\"Непал\"},{value:\"Сальвадор\"},{value:\"Малави\"},{value:\"Папуа - Новая Гвинея\"},{value:\"Гана\"},{value:\"Гваделупа\"},{value:\"Уганда\"},{value:\"Доминикана\"},{value:\"Пакистан\"},{value:\"Мадагаскар\"},{value:\"Бахрейн\"},{value:\"Замбия\"},{value:\"Эквадор\"},{value:\"Каймановы острова\"},{value:\"Макао\"},{value:\"Американское Самоа\"},{value:\"Иордания\"},{value:\"Белиз\"},{value:\"Лаос\"},{value:\"Гватемала\"},{value:\"Эфиопия\"},{value:\"Буркина-Фасо\"},{value:\"Сенегал\"},{value:\"Йемен\"},{value:\"Бермуды\"},{value:\"Панама\"},{value:\"Албания\"},{value:\"Боливия\"},{value:\"Камерун\"},{value:\"Аруба\"},{value:\"Нигерия\"},{value:\"Черногория\"},{value:\"Туркменистан\"},{value:\"Антильские Острова\"},{value:\"Сомали\"},{value:\"Судан\"},{value:\"Новая Каледония\"},{value:\"Либерия\"},{value:\"Босния\"},{value:\"Берег Слоновой кости\"},{value:\"Вануату\"},{value:\"Парагвай\"},{value:\"Зимбабве\"},{value:\"Мавритания\"},{value:\"Мали\"},{value:\"Фиджи\"},{value:\"Чад\"},{value:\"Тринидад и Тобаго\"},{value:\"Гренландия\"},{value:\"Маврикий\"},{value:\"Ангола\"},{value:\"Коста-Рика\"},{value:\"Виргинские Острова (Великобритания)\"},{value:\"Никарагуа\"},{value:\"Мозамбик\"},{value:\"Гаити\"},{value:\"Мальдивы\"},{value:\"Мартиника\"},{value:\"Гибралтар\"},{value:\"Гвинея\"},{value:\"Барбадос\"},{value:\"Реюньон\"},{value:\"Заир\"},{value:\"Гондурас\"},{value:\"Антарктида\"},{value:\"Конго (ДРК)\"},{value:\"Французская Гвиана\"},{value:\"Мьянма\"},{value:\"Бирма\"}];    ","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { clearSettings } from '../../store/actions/filmActions';\r\nimport { setSettingsAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport { Typography, Button, Slider, Select, Switch } from 'antd';\r\nimport Navigation from '../../components/Navigation';\r\nimport { TYPES, RATINGS, YEARS, GENRES, COUNTRIES } from './config';\r\nimport './Settings.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Settings = ({ settings, clearSettings, setSettingsAndSave }) => {\r\n\r\n    const setSettings = useCallback((value, type) => {\r\n        // отправляем новое состояние в store\r\n        setSettingsAndSave({ \r\n            dark: (type === 'mode') ? value : settings.dark,\r\n            filters: {\r\n                types: (type === 'types') ? value : settings.filters.types,\r\n                ratings: (type === 'ratings') ? value : settings.filters.ratings,\r\n                years: (type === 'years') ? value : settings.filters.years,\r\n                genres: (type === 'genres') ? value : settings.filters.genres,\r\n                countries: (type === 'countries') ? value : settings.filters.countries\r\n            }\r\n        });\r\n    }, [settings, setSettingsAndSave]);\r\n   \r\n\r\n    const handleSelect = (value, type) => {\r\n        if (value === \"Все\") {\r\n            switch (type) {\r\n                case 'genres':\r\n                    setSettings(GENRES.map(genre => genre.value), 'genres');\r\n                    break;\r\n                case 'countries':\r\n                    setSettings(COUNTRIES.map(country => country.value), 'countries');\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeSelect = (value, type) => {\r\n        if (value === \"Все\") {\r\n            (type === \"genres\") ? setSettings([], 'genres') : setSettings([], 'countries')\r\n        }\r\n        if (type === \"types\" && settings.filters.types.length === 1) {\r\n            setSettings(TYPES.map(type => type.value), 'types')\r\n        }\r\n    }\r\n\r\n    const handleClearSettings = useCallback(() => {\r\n        localStorage.removeItem('settings');\r\n        clearSettings();\r\n    }, [settings, clearSettings])\r\n\r\n    return (\r\n        <div className=\"settings--wrapper theme\">\r\n            <div className=\"settings__header theme\">\r\n                <div className=\"settings__header--title\" level={2}>Настройки</div>\r\n            </div>\r\n            <div className=\"settings__content\">\r\n                <Link type=\"secondary\" className=\"settings__content--login\" to='/login'>\r\n                    <Button size=\"large\">Вход / Регистрация</Button>\r\n                </Link>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Темная версия оформления</Text>\r\n                    <Switch onChange={(val) => {setSettings(val, \"mode\")}} value={settings.dark} checked={settings.dark} />\r\n                </div>\r\n\r\n                <Title level={3}>Настройки поиска</Title>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Тип</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={settings.filters.types}\r\n                            onChange={(val) => {setSettings(val, \"types\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"types\")}}\r\n                            options={TYPES}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row theme\">\r\n                    <Text className=\"theme\">Рейтинг</Text>\r\n                    <Slider className=\"settings__content--slider\" range\r\n                            marks={RATINGS} min={5} max={10} step={0.5} defaultValue={settings.filters.ratings}\r\n                            value={settings.filters.ratings}\r\n                            onChange={(val) => {setSettings(val, \"ratings\")}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Годы</Text>\r\n                    <Slider className=\"settings__content--slider\" range\r\n                            marks={YEARS} min={1980} max={2021} defaultValue={settings.filters.years}\r\n                            value={settings.filters.years}\r\n                            onChange={(val) => {setSettings(val, \"years\")}}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Жанры</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={settings.filters.genres}\r\n                            onSelect={(val) => {handleSelect(val, \"genres\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"genres\")}}\r\n                            onChange={(val) => {setSettings(val, \"genres\")}}\r\n                            options={GENRES}\r\n                            maxTagCount={3}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"settings__content--row\">\r\n                    <Text className=\"theme\">Страны</Text>\r\n                    <Select className=\"settings__content--select\"\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            value={settings.filters.countries}\r\n                            onSelect={(val) => {handleSelect(val, \"countries\")}}\r\n                            onDeselect={(val) => {handleDeSelect(val, \"countries\")}}\r\n                            onChange={(val) => {setSettings(val, \"countries\")}}\r\n                            options={COUNTRIES}\r\n                            maxTagCount={4}\r\n                    />\r\n                </div>\r\n\r\n                <Button type=\"secondary\" size=\"large\" className=\"settings__content--reset\" onClick={handleClearSettings}>\r\n                    Сбросить настройки\r\n                </Button>\r\n\r\n            </div>\r\n            <div className=\"settings__empty\">_</div>\r\n            <Navigation checked={ 'settings' } />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    settings: filmReducer.settings,\r\n});\r\n\r\nSettings.propTypes = {\r\n    clearSettings: PropTypes.func,\r\n    setSettingsAndSave: PropTypes.func,\r\n    settings: PropTypes.object\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ clearSettings, setSettingsAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ListLink.scss';\r\n\r\nconst ListLink = (props) => {\r\n    return (\r\n        <div className=\"listLink--wrapper\">\r\n            <p className=\"listLink__title\">{props.children}</p>\r\n            <p className=\"listLink__length\">{props.listLength}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nListLink.propTypes = {\r\n    listLength: PropTypes.number,\r\n    children: PropTypes.string\r\n}\r\n\r\nexport default ListLink;","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Button } from 'antd';\r\n\r\nimport './Lists.scss';\r\nimport Navigation from '../../components/Navigation';\r\nimport ListLink from '../../components/ListLink';\r\nimport { clearLists } from '../../store/actions/filmActions';\r\n\r\nconst Lists = ({ blacklist, temporary, alreadySeen, history, favorites, clearLists }) => {\r\n    const handleClearButton = useCallback(() => {\r\n        ['blacklist', 'alreadySeen', 'history', 'favorites'].forEach(list => {localStorage.removeItem(list)});\r\n        clearLists()\r\n    }, [blacklist, temporary, alreadySeen, history, favorites, clearLists])\r\n\r\n\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">Списки фильмов</div>\r\n            <Link className=\"lists__link--color theme\" to=\"/history\"><ListLink listLength={history.data.length}>История предложений</ListLink></Link>\r\n            <Link className=\"lists__link--color theme\" to=\"/seenList\"><ListLink listLength={alreadySeen.data.length}>Просмотренные фильмы</ListLink></Link>\r\n            <Link className=\"lists__link--color theme\" to=\"/blacklist\"><ListLink listLength={blacklist.data.length}>Отклоненные фильмы</ListLink></Link>\r\n            <Link className=\"lists__link--color theme\" to=\"/temporary\"><ListLink listLength={temporary.data.length}>В другой раз</ListLink></Link>\r\n            <Link className=\"lists__link--color theme\" to=\"/favorites\"><ListLink listLength={favorites.data.length}>Избранные</ListLink></Link>\r\n            <div className=\"lists__button__group\">\r\n                <Button className=\"button\" onClick={handleClearButton}>Очистить списки</Button>\r\n            </div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nLists.propTypes = {\r\n    history: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    blacklist: PropTypes.object,\r\n    temporary: PropTypes.object,\r\n    alreadySeen: PropTypes.object,\r\n    clearLists: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ clearLists }, dispatch);\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    history: filmReducer.history,\r\n    favorites: filmReducer.favorites,\r\n    blacklist: filmReducer.blacklist,\r\n    temporary: filmReducer.temporary,\r\n    alreadySeen: filmReducer.alreadySeen\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);","import Icon from '@ant-design/icons';\r\n\r\nconst TrashBinSvg = () => (\r\n    <svg width=\"20\" height=\"20\" viewBox=\"-57 0 512 512\"  ><path d=\"m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0\" /><path d=\"m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0\" /><path d=\"m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0\" /></svg>\r\n);\r\n\r\nconst TrashBin = props => <Icon component={TrashBinSvg} {...props} />;\r\n\r\nexport default TrashBin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Star from '../icons/Star';\r\nimport Bookmark from '../icons/Bookmark';\r\nimport TrashBin from '../icons/TrashBin';\r\n\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = ({ removeFromList, addToFavorites, name, secondName, year, rate, age, genre, status }) => {\r\n    return (\r\n        <div className=\"list-item\">\r\n            <div className=\"list-item__about\">\r\n                <p className=\"list-item__name\">{ name }<span className=\"list-item__year\"> ({ year })</span></p>\r\n                <p className=\"list-item__second-name\">{ secondName }</p>\r\n                <p className=\"list-item__genre\">{ genre }<span className=\"list-item__age\">{ age ? `${age}+` : '' }</span></p>\r\n            </div>\r\n            <div className=\"list-item__actions-container\">\r\n                <div className=\"list-item__rating\">\r\n                    <Star />\r\n                    <div className=\"list-item__rate\">{ rate }</div>\r\n                </div>\r\n                <div className=\"list-item__buttons\">\r\n                    {!!addToFavorites && <button className=\"favorite\" onClick={ addToFavorites }><Bookmark status={ status } /></button>}\r\n                    <button onClick={ removeFromList }><TrashBin /></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nListItem.propTypes = {\r\n    removeFromList: PropTypes.func,\r\n    addToFavorites: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(undefined)]),\r\n    name: PropTypes.string,\r\n    secondName: PropTypes.string,\r\n    year: PropTypes.number,\r\n    rate: PropTypes.number,\r\n    age: PropTypes.number,\r\n    genre: PropTypes.array,\r\n    status: PropTypes.oneOfType([PropTypes.bool, PropTypes.instanceOf(undefined)]),\r\n};\r\n\r\nexport default ListItem; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Lists.scss';\r\n\r\n\r\nconst Blacklist = ({ films, favorites, blacklist, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && blacklist.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"blacklist\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">Отклоненные</div>\r\n            <div className=\"lists__list\"> \r\n            { list?.length ? list : (<div className=\"lists__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"lists__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nBlacklist.propTypes = {\r\n    blacklist: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites,\r\n    blacklist: filmReducer.blacklist\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blacklist);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Lists.scss';\r\n\r\n\r\nconst Favorites = ({ films, favorites, removeFromListAndSave }) => {\r\n    let list = films.length && favorites.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"favorites\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} removeFromList={handleRemoveFromList} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">Избранные</div>\r\n            <div className=\"lists__list\">\r\n                {list?.length ? list : (<div className=\"lists__placeholder\" />)}\r\n            </div>\r\n            <div className=\"lists__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nFavorites.propTypes = {\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { removeFromListAndSave, favoriteIconPush } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Lists.scss';\r\n\r\n\r\nconst History = ({ films, favorites, history, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && history.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id);\r\n        };\r\n        return <ListItem key={`${film.id}${item.timestamp}`} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    });\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">История предложений</div>\r\n            <div className=\"lists__list\">\r\n                { list?.length ? list : (<div className=\"lists__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"lists__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nHistory.propTypes = {\r\n    history: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    history: filmReducer.history,\r\n    favorites: filmReducer.favorites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { favoriteIconPush, removeFromListAndSave } from '../../store/actions/complexFilmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Lists.scss';\r\n\r\n\r\nconst SeenList = ({ films, favorites, alreadySeen, favoriteIconPush, removeFromListAndSave }) => {\r\n    let list = films.length && alreadySeen.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromListAndSave(film.id, \"alreadySeen\");\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">Просмотренные</div>\r\n            <div className=\"lists__list\">\r\n                { list?.length ? list : (<div className=\"lists__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"lists__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nSeenList.propTypes = {\r\n    alreadySeen: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromListAndSave: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites,\r\n    alreadySeen: filmReducer.alreadySeen\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromListAndSave }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SeenList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\nimport { favoriteIconPush } from '../../store/actions/complexFilmActions';\r\nimport { removeFromTemporary } from '../../store/actions/filmActions';\r\n\r\nimport ListItem from '../../components/ListItem';\r\nimport Navigation from '../../components/Navigation';\r\nimport './Lists.scss';\r\n\r\nconst Temporary = ({ films, favorites, temporary, favoriteIconPush, removeFromTemporary }) => {\r\n    let list = films.length && temporary.data.map(item => {\r\n        let film = films.find(film => film.id === item.id);\r\n        const handleAddToFavorites = () => {\r\n            favoriteIconPush(film.id);\r\n        };\r\n        const handleRemoveFromList = () => {\r\n            removeFromTemporary(film.id);\r\n        };\r\n        return <ListItem key={film.id} name={film.name} secondName={film.secondName} year={film.year} rate={film.rate} age={film.age} genre={film.genre} addToFavorites={handleAddToFavorites} removeFromList={handleRemoveFromList} status={favorites.list[film.id]} />\r\n    }).reverse();\r\n    return (\r\n        <div className=\"lists--wrapper theme\">\r\n            <div className=\"lists__header theme\">В другой раз</div>\r\n            <div className=\"lists__list\"> \r\n            { list?.length ? list : (<div className=\"lists__placeholder\"/>) }\r\n            </div>\r\n            <div className=\"lists__emptyBlock\"></div>\r\n            <Navigation checked={'lists'} />\r\n        </div>\r\n    )\r\n};\r\n\r\nTemporary.propTypes = {\r\n    temporary: PropTypes.object,\r\n    favorites: PropTypes.object,\r\n    films: PropTypes.array,\r\n    favoriteIconPush: PropTypes.func,\r\n    removeFromTemporary: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n    films: filmReducer.films,\r\n    favorites: filmReducer.favorites,\r\n    temporary: filmReducer.temporary\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ favoriteIconPush, removeFromTemporary }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Temporary);","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport Home from \"../pages/Home/Home\"\r\nimport LoginForm from '../pages/LoginPage';\r\nimport RegistrationForm from \"../pages/RegistrationPage\";\r\nimport FilmCardContainer from './FilmCardContainer';\r\nimport Settings from '../pages/Settings';\r\nimport Lists from '../pages/Lists';\r\nimport {SeenList, History, Blacklist, Temporary, Favorites} from '../containers/Lists';\r\n\r\nconst Router = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ Home } />\r\n            <Route path=\"/login\" component={ LoginForm } />\r\n            <Route path=\"/registration\" component={ RegistrationForm } />\r\n            <Route path=\"/film\" component={ FilmCardContainer } />\r\n            <Route path=\"/settings\" component={ Settings } />\r\n            <Route path=\"/lists\" component={ Lists } />\r\n            <Route path=\"/history\" component={ History } />\r\n            <Route path=\"/seenList\" component={ SeenList } />\r\n            <Route path=\"/blacklist\" component={ Blacklist } />\r\n            <Route path=\"/temporary\" component={ Temporary } />\r\n            <Route path=\"/favorites\" component={ Favorites } />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Router;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Router from './containers/Router';\r\nimport { fetchFilms } from './store/actions/complexFilmActions';\r\n\r\nconst App = ({ fetchFilms, settings }) => {\r\n  useEffect(() => {\r\n    fetchFilms();\r\n  });\r\n\r\n  document.body.classList.toggle(\"dark\", settings.dark);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  fetchFilms: PropTypes.func,\r\n  settings: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = ({ filmReducer }) => ({\r\n  settings: filmReducer.settings\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchFilms }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import update from 'react-addons-update';\r\nimport { ADD_TO_HISTORY, ADD_TO_ALREADY_SEEN, ADD_TO_BLACKLIST, ADD_TO_TEMPORARY, LOAD_FILMS, SELECT_FILM, LOAD_FILMS_STARTED, LOAD_FILMS_FAILURE, CLEAR_LISTS, ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, REMOVE_FROM_BLACKLIST, REMOVE_FROM_TEMPORARY, REMOVE_FROM_ALREADY_SEEN, REMOVE_FROM_HISTORY, SET_SETTINGS, CLEAR_SETTINGS, SHOW_NOTIFICATION, REMOVE_NOTIFICATION } from '../actions/filmActions';\r\n\r\nconst prepareList = (listName) => localStorage.getItem(listName) ? JSON.parse(localStorage.getItem(listName)) : { data: [], list: {} };\r\nconst prepareSettings = () => localStorage.getItem('settings') \r\n                            ? JSON.parse(localStorage.getItem('settings')) \r\n                            : { \r\n                                dark: false,\r\n                                filters: {\r\n                                    types: ['FILM', 'TV_SHOW'],\r\n                                    genres: ['боевик','комедия', 'драма'],\r\n                                    countries: ['Россия','США'],\r\n                                    ratings: [7, 10],\r\n                                    years: [1990, 2020]\r\n                                }\r\n                            };\r\n\r\nconst initStore = {\r\n    films: [],\r\n    film: null,\r\n    history: prepareList('history'),\r\n    blacklist: prepareList('blacklist'),\r\n    alreadySeen: prepareList('alreadySeen'),\r\n    temporary: { data: [], list: {} },\r\n    favorites: prepareList('favorites'),\r\n    settings: prepareSettings(),\r\n    isLoading: false,\r\n    notification: {message: '', description: ''},\r\n    error: null\r\n}\r\n\r\nexport default function filmReducer(store = initStore, action) {\r\n    switch (action.type) {\r\n        case LOAD_FILMS_STARTED: {\r\n            return update(store, {\r\n                isLoading: {\r\n                    $set: true\r\n                }\r\n            });\r\n        }\r\n        case LOAD_FILMS_FAILURE: {\r\n            return update(store, {\r\n                isLoading: {\r\n                    $set: false\r\n                },\r\n                error: {\r\n                    $set: action.error\r\n                }\r\n            });\r\n        }\r\n        case LOAD_FILMS: {\r\n            return update(store, {\r\n                films: {\r\n                    $set: [...action.films]\r\n                },\r\n                error: {\r\n                    $set: null\r\n                }\r\n            });\r\n        }\r\n        case SELECT_FILM: {\r\n            return update(store, {\r\n                film: {\r\n                    $set: { ...store.films[action.film] }\r\n                },\r\n                isLoading: {\r\n                    $set: false\r\n                },\r\n                error: {\r\n                    $set: null\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_HISTORY: {\r\n            return update(store, {\r\n                history: {\r\n                    $merge: {\r\n                        ...store.history,\r\n                        data: [\r\n                            ...store.history.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.history.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_BLACKLIST: {\r\n            return update(store, {\r\n                blacklist: {\r\n                    $merge: {\r\n                        ...store.blacklist,\r\n                        data: [\r\n                            ...store.blacklist.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.blacklist.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_TEMPORARY: {\r\n            return update(store, {\r\n                temporary: {\r\n                    $merge: {\r\n                        ...store.temporary,\r\n                        data: [\r\n                            ...store.temporary.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.temporary.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_ALREADY_SEEN: {\r\n            return update(store, {\r\n                alreadySeen: {\r\n                    $merge: {\r\n                        ...store.alreadySeen,\r\n                        data: [\r\n                            ...store.alreadySeen.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.alreadySeen.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case ADD_TO_FAVORITES: {\r\n            return update(store, {\r\n                favorites: {\r\n                    $merge: {\r\n                        ...store.favorites,\r\n                        data: [\r\n                            ...store.favorites.data,\r\n                            {\r\n                                id: action.filmId,\r\n                                timestamp: Date.now(),\r\n                                status: 'ADDED',\r\n                            }\r\n                        ],\r\n                        list: {\r\n                            ...store.favorites.list,\r\n                            [action.filmId]: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_HISTORY: {\r\n            let deleteFilm = store.history.data.find(film => film.id === action.filmId);\r\n            store.history.data.splice(store.history.data.indexOf(deleteFilm), 1);\r\n            delete store.history.list[action.filmId];\r\n            return update(store, {\r\n                history: {\r\n                    $set: {...store.history}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_ALREADY_SEEN: {\r\n            let deleteFilm = store.alreadySeen.data.find(film => film.id === action.filmId);\r\n            store.alreadySeen.data.splice(store.alreadySeen.data.indexOf(deleteFilm), 1);\r\n            delete store.alreadySeen.list[action.filmId];\r\n            return update(store, {\r\n                alreadySeen: {\r\n                    $set: {...store.alreadySeen}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_BLACKLIST: {\r\n            let deleteFilm = store.blacklist.data.find(film => film.id === action.filmId);\r\n            store.blacklist.data.splice(store.blacklist.data.indexOf(deleteFilm), 1);\r\n            delete store.blacklist.list[action.filmId];\r\n            return update(store, {\r\n                blacklist: {\r\n                    $set: {...store.blacklist}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_TEMPORARY: {\r\n            let deleteFilm = store.temporary.data.find(film => film.id === action.filmId);\r\n            store.temporary.data.splice(store.temporary.data.indexOf(deleteFilm), 1);\r\n            delete store.temporary.list[action.filmId];\r\n            return update(store, {\r\n                temporary: {\r\n                    $set: {...store.temporary}\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_FROM_FAVORITES: {\r\n            let deleteFilm = store.favorites.data.find(film => film.id === action.filmId);\r\n            store.favorites.data.splice(store.favorites.data.indexOf(deleteFilm), 1);\r\n            delete store.favorites.list[action.filmId];\r\n            return update(store, {\r\n                favorites: {\r\n                    $set: {...store.favorites}\r\n                }\r\n            });\r\n        }\r\n        case SHOW_NOTIFICATION: {\r\n            return update(store, {\r\n                notification: {\r\n                    $set: {\r\n                        message: action.message,\r\n                        description: action.description,\r\n                        type: action.notifyType\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case REMOVE_NOTIFICATION: {\r\n            return update(store, {\r\n                notification: {\r\n                    $set: {message: '', description: ''}\r\n                }\r\n            });\r\n        }\r\n        case CLEAR_LISTS: {\r\n            return update(store, {\r\n                history: {\r\n                    $set: prepareList('history')\r\n                },\r\n                favorites: {\r\n                    $set: prepareList('favorites')\r\n                },\r\n                alreadySeen: {\r\n                    $set: prepareList('alreadySeen')\r\n                },\r\n                blacklist: {\r\n                    $set: prepareList('blacklist')\r\n                },\r\n                temporary: {\r\n                    $set: prepareList('temporary')\r\n                }\r\n            });\r\n        }\r\n        case SET_SETTINGS: {\r\n            return update(store, {\r\n                settings: {\r\n                    $set: {\r\n                        dark: action.settings.dark,\r\n                        filters: {\r\n                            types: [...action.settings.filters.types],\r\n                            ratings: [...action.settings.filters.ratings],\r\n                            years: [...action.settings.filters.years],\r\n                            genres: [...action.settings.filters.genres],\r\n                            countries: [...action.settings.filters.countries]\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        case CLEAR_SETTINGS: {\r\n            return update(store, {\r\n                settings: {\r\n                    $set: prepareSettings()\r\n                }\r\n            });\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport filmReducer from './filmReducer';\r\n\r\n// eslint-disable-next-line\r\nexport default history => combineReducers({\r\n    router: connectRouter(history),\r\n    filmReducer,\r\n});","import filmMiddleware from './filmMiddleware';\r\n\r\n// eslint-disable-next-line\r\nexport default [\r\n    filmMiddleware,\r\n];","// eslint-disable-next-line\r\nexport default store => next => action => {\r\n    return next(action);\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport RootReducers from './reducers';\r\nimport middlewares from './middlewares';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// тернарник внутри compose не сработает\r\nconst composer = window.__REDUX_DEVTOOLS_EXTENSION__ ? compose(\r\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n) : compose(\r\n    applyMiddleware(routerMiddleware(history), thunk, ...middlewares),\r\n);\r\n\r\nexport const store = createStore(\r\n    RootReducers(history),\r\n    composer,\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./styles/styles.scss\";\r\n\r\nimport App from \"./App\";\r\nimport { store, history } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <App />\r\n      </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}